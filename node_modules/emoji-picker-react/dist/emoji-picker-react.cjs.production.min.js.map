{"version":3,"file":"emoji-picker-react.cjs.production.min.js","sources":["../src/DomUtils/classNames.ts","../src/DomUtils/focusElement.ts","../src/components/context/ElementRefContext.tsx","../src/types/exposedTypes.ts","../src/config/categoryConfig.ts","../src/dataUtils/DataTypes.ts","../src/data/skinToneVariations.ts","../src/dataUtils/alphaNumericEmojiIndex.ts","../src/dataUtils/emojiSelectors.ts","../src/config/cdnUrls.ts","../src/config/config.ts","../src/components/context/PickerConfigContext.tsx","../src/config/mutableConfig.ts","../src/config/useConfig.ts","../src/hooks/useDebouncedState.ts","../src/hooks/useDisallowedEmojis.ts","../src/components/context/PickerContext.tsx","../src/hooks/useInitialLoad.ts","../src/hooks/useDisallowMouseMove.ts","../src/DomUtils/elementPositionInRow.ts","../src/components/body/EmojiVariationPicker.tsx","../src/components/Layout/Flex.tsx","../src/components/header/SkinTonePicker.tsx","../src/DomUtils/selectors.ts","../src/dataUtils/parseNativeEmoji.ts","../src/dataUtils/suggested.ts","../src/typeRefinements/typeRefinements.ts","../src/hooks/useCloseAllOpenToggles.ts","../src/hooks/useSetVariationPicker.ts","../src/hooks/useMouseDownHandlers.ts","../src/DomUtils/scrollTo.ts","../src/hooks/useFocus.ts","../src/hooks/useFilter.ts","../node_modules/style-inject/dist/style-inject.es.js","../src/components/atoms/Button.tsx","../src/components/emoji/ClickableEmojiButton.tsx","../src/components/emoji/EmojiImg.tsx","../src/components/emoji/NativeEmoji.tsx","../src/components/emoji/ViewOnlyEmoji.tsx","../src/components/emoji/Emoji.tsx","../src/components/body/EmojiCategory.tsx","../src/components/body/Suggested.tsx","../src/components/body/EmojiList.tsx","../src/hooks/useHideEmojisByUniocode.ts","../src/hooks/useIsEmojiHidden.ts","../src/DomUtils/keyboardNavigation.ts","../src/components/body/Body.tsx","../src/hooks/useOnScroll.ts","../src/hooks/useShouldShowSkinTonePicker.ts","../src/components/Layout/Space.tsx","../src/components/Layout/Absolute.tsx","../src/components/Layout/Relative.tsx","../src/components/footer/Preview.tsx","../src/hooks/useEmojiPreviewEvents.ts","../src/hooks/useIsSearchMode.ts","../src/components/navigation/CategoryNavigation.tsx","../src/hooks/useScrollCategoryIntoView.ts","../src/hooks/useActiveCategoryScrollDetection.ts","../src/DomUtils/categoryNameFromDom.ts","../src/hooks/useShouldHideCustomEmojis.ts","../src/components/header/Search.tsx","../src/hooks/useKeyboardNavigation.ts","../src/components/header/Header.tsx","../src/DomUtils/getActiveElement.ts","../src/hooks/preloadEmoji.ts","../src/components/main/PickerMain.tsx","../src/hooks/useOnFocus.ts","../src/DomUtils/isDarkTheme.ts","../src/EmojiPickerReact.tsx","../src/components/ErrorBoundary.tsx","../src/components/emoji/ExportedEmoji.tsx","../src/index.tsx"],"sourcesContent":["export enum ClassNames {\n  hiddenOnSearch = 'epr-hidden-on-search',\n  searchActive = 'epr-search-active',\n  hidden = 'epr-hidden',\n  visible = 'epr-visible',\n  active = 'epr-active',\n  emoji = 'epr-emoji',\n  category = 'epr-emoji-category',\n  label = 'epr-emoji-category-label',\n  categoryContent = 'epr-emoji-category-content',\n  emojiHasVariations = 'epr-emoji-has-variations',\n  scrollBody = 'epr-body',\n  emojiList = 'epr-emoji-list',\n  external = '__EmojiPicker__',\n  emojiPicker = 'EmojiPickerReact',\n  open = 'epr-open',\n  vertical = 'epr-vertical',\n  horizontal = 'epr-horizontal',\n  variationPicker = 'epr-emoji-variation-picker'\n}\n\nexport function asSelectors(...classNames: ClassNames[]): string {\n  return classNames.map(c => `.${c}`).join('');\n}\n","import { NullableElement } from './selectors';\n\nexport function focusElement(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    element.focus();\n  });\n}\n\nexport function focusPrevElementSibling(element: NullableElement) {\n  if (!element) return;\n\n  const prev = element.previousElementSibling as HTMLElement;\n\n  focusElement(prev);\n}\n\nexport function focusNextElementSibling(element: NullableElement) {\n  if (!element) return;\n\n  const next = element.nextElementSibling as HTMLElement;\n\n  focusElement(next);\n}\n\nexport function focusFirstElementChild(element: NullableElement) {\n  if (!element) return;\n\n  const first = element.firstElementChild as HTMLElement;\n\n  focusElement(first);\n}\n","import * as React from 'react';\n\nimport { focusElement } from '../../DomUtils/focusElement';\nimport { NullableElement } from '../../DomUtils/selectors';\n\nexport function ElementRefContextProvider({\n  children\n}: {\n  children: React.ReactNode;\n}) {\n  const PickerMainRef = React.useRef<HTMLElement>(null);\n  const AnchoredEmojiRef = React.useRef<HTMLElement>(null);\n  const BodyRef = React.useRef<HTMLDivElement>(null);\n  const SearchInputRef = React.useRef<HTMLInputElement>(null);\n  const SkinTonePickerRef = React.useRef<HTMLDivElement>(null);\n  const CategoryNavigationRef = React.useRef<HTMLDivElement>(null);\n  const VariationPickerRef = React.useRef<HTMLDivElement>(null);\n\n  return (\n    <ElementRefContext.Provider\n      value={{\n        AnchoredEmojiRef,\n        BodyRef,\n        CategoryNavigationRef,\n        PickerMainRef,\n        SearchInputRef,\n        SkinTonePickerRef,\n        VariationPickerRef\n      }}\n    >\n      {children}\n    </ElementRefContext.Provider>\n  );\n}\n\nexport type ElementRef<\n  E extends HTMLElement = HTMLElement\n> = React.MutableRefObject<E | null>;\n\ntype ElementRefs = {\n  PickerMainRef: ElementRef;\n  AnchoredEmojiRef: ElementRef;\n  SkinTonePickerRef: ElementRef<HTMLDivElement>;\n  SearchInputRef: ElementRef<HTMLInputElement>;\n  BodyRef: ElementRef<HTMLDivElement>;\n  CategoryNavigationRef: ElementRef<HTMLDivElement>;\n  VariationPickerRef: ElementRef<HTMLDivElement>;\n};\n\nconst ElementRefContext = React.createContext<ElementRefs>({\n  AnchoredEmojiRef: React.createRef(),\n  BodyRef: React.createRef(),\n  CategoryNavigationRef: React.createRef(),\n  PickerMainRef: React.createRef(),\n  SearchInputRef: React.createRef(),\n  SkinTonePickerRef: React.createRef(),\n  VariationPickerRef: React.createRef()\n});\n\nfunction useElementRef() {\n  return React.useContext(ElementRefContext);\n}\n\nexport function usePickerMainRef() {\n  return useElementRef()['PickerMainRef'];\n}\n\nexport function useAnchoredEmojiRef() {\n  return useElementRef()['AnchoredEmojiRef'];\n}\n\nexport function useSetAnchoredEmojiRef(): (target: NullableElement) => void {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  return (target: NullableElement) => {\n    if (target === null && AnchoredEmojiRef.current !== null) {\n      focusElement(AnchoredEmojiRef.current);\n    }\n\n    AnchoredEmojiRef.current = target;\n  };\n}\n\nexport function useBodyRef() {\n  return useElementRef()['BodyRef'];\n}\n\nexport function useSearchInputRef() {\n  return useElementRef()['SearchInputRef'];\n}\n\nexport function useSkinTonePickerRef() {\n  return useElementRef()['SkinTonePickerRef'];\n}\n\nexport function useCategoryNavigationRef() {\n  return useElementRef()['CategoryNavigationRef'];\n}\n\nexport function useVariationPickerRef() {\n  return useElementRef()['VariationPickerRef'];\n}\n","export type EmojiClickData = {\n  activeSkinTone: SkinTones;\n  unified: string;\n  unifiedWithoutSkinTone: string;\n  emoji: string;\n  names: string[];\n  imageUrl: string;\n  getImageUrl: (emojiStyle?: EmojiStyle) => string;\n  isCustom: boolean;\n};\n\nexport enum SuggestionMode {\n  RECENT = 'recent',\n  FREQUENT = 'frequent'\n}\n\nexport enum EmojiStyle {\n  NATIVE = 'native',\n  APPLE = 'apple',\n  TWITTER = 'twitter',\n  GOOGLE = 'google',\n  FACEBOOK = 'facebook'\n}\n\nexport enum Theme {\n  DARK = 'dark',\n  LIGHT = 'light',\n  AUTO = 'auto'\n}\n\nexport enum SkinTones {\n  NEUTRAL = 'neutral',\n  LIGHT = '1f3fb',\n  MEDIUM_LIGHT = '1f3fc',\n  MEDIUM = '1f3fd',\n  MEDIUM_DARK = '1f3fe',\n  DARK = '1f3ff'\n}\n\nexport enum Categories {\n  SUGGESTED = 'suggested',\n  CUSTOM = 'custom',\n  SMILEYS_PEOPLE = 'smileys_people',\n  ANIMALS_NATURE = 'animals_nature',\n  FOOD_DRINK = 'food_drink',\n  TRAVEL_PLACES = 'travel_places',\n  ACTIVITIES = 'activities',\n  OBJECTS = 'objects',\n  SYMBOLS = 'symbols',\n  FLAGS = 'flags'\n}\n\nexport enum SkinTonePickerLocation {\n  SEARCH = 'SEARCH',\n  PREVIEW = 'PREVIEW'\n}\n","import { Categories, SuggestionMode } from '../types/exposedTypes';\n\nexport { Categories };\n\nconst categoriesOrdered: Categories[] = [\n  Categories.SUGGESTED,\n  Categories.CUSTOM,\n  Categories.SMILEYS_PEOPLE,\n  Categories.ANIMALS_NATURE,\n  Categories.FOOD_DRINK,\n  Categories.TRAVEL_PLACES,\n  Categories.ACTIVITIES,\n  Categories.OBJECTS,\n  Categories.SYMBOLS,\n  Categories.FLAGS\n];\n\nexport const SuggestedRecent: CategoryConfig = {\n  name: 'Recently Used',\n  category: Categories.SUGGESTED\n};\n\nexport type CustomCategoryConfig = {\n  category: Categories.CUSTOM;\n  name: string;\n};\n\nconst configByCategory: Record<Categories, CategoryConfig> = {\n  [Categories.SUGGESTED]: {\n    category: Categories.SUGGESTED,\n    name: 'Frequently Used'\n  },\n  [Categories.CUSTOM]: {\n    category: Categories.CUSTOM,\n    name: 'Custom Emojis'\n  },\n  [Categories.SMILEYS_PEOPLE]: {\n    category: Categories.SMILEYS_PEOPLE,\n    name: 'Smileys & People'\n  },\n  [Categories.ANIMALS_NATURE]: {\n    category: Categories.ANIMALS_NATURE,\n    name: 'Animals & Nature'\n  },\n  [Categories.FOOD_DRINK]: {\n    category: Categories.FOOD_DRINK,\n    name: 'Food & Drink'\n  },\n  [Categories.TRAVEL_PLACES]: {\n    category: Categories.TRAVEL_PLACES,\n    name: 'Travel & Places'\n  },\n  [Categories.ACTIVITIES]: {\n    category: Categories.ACTIVITIES,\n    name: 'Activities'\n  },\n  [Categories.OBJECTS]: {\n    category: Categories.OBJECTS,\n    name: 'Objects'\n  },\n  [Categories.SYMBOLS]: {\n    category: Categories.SYMBOLS,\n    name: 'Symbols'\n  },\n  [Categories.FLAGS]: {\n    category: Categories.FLAGS,\n    name: 'Flags'\n  }\n};\n\nexport function baseCategoriesConfig(\n  modifiers?: Record<Categories, CategoryConfig>\n): CategoriesConfig {\n  return categoriesOrdered.map(category => {\n    return {\n      ...configByCategory[category],\n      ...(modifiers && modifiers[category] && modifiers[category])\n    };\n  });\n}\n\nexport function categoryFromCategoryConfig(category: CategoryConfig) {\n  return category.category;\n}\n\nexport function categoryNameFromCategoryConfig(category: CategoryConfig) {\n  return category.name;\n}\n\nexport type CategoriesConfig = CategoryConfig[];\n\nexport type CategoryConfig = {\n  category: Categories;\n  name: string;\n};\n\nexport type UserCategoryConfig = Array<Categories | CategoryConfig>;\n\nexport function mergeCategoriesConfig(\n  userCategoriesConfig: UserCategoryConfig = [],\n  modifiers: CategoryConfigModifiers = {}\n): CategoriesConfig {\n  const extra = {} as Record<Categories, CategoryConfig>;\n\n  if (modifiers.suggestionMode === SuggestionMode.RECENT) {\n    extra[Categories.SUGGESTED] = SuggestedRecent;\n  }\n\n  const base = baseCategoriesConfig(extra);\n  if (!userCategoriesConfig?.length) {\n    return base;\n  }\n\n  return userCategoriesConfig.map(category => {\n    if (typeof category === 'string') {\n      return getBaseConfigByCategory(category, extra[category]);\n    }\n\n    return {\n      ...getBaseConfigByCategory(category.category, extra[category.category]),\n      ...category\n    };\n  });\n}\n\nfunction getBaseConfigByCategory(\n  category: Categories,\n  modifier: CategoryConfig = {} as CategoryConfig\n) {\n  return Object.assign(configByCategory[category], modifier);\n}\n\ntype CategoryConfigModifiers = {\n  suggestionMode?: SuggestionMode;\n};\n","import emojis from '../data/emojis';\n\nexport enum EmojiProperties {\n  name = 'n',\n  unified = 'u',\n  variations = 'v',\n  added_in = 'a',\n  imgUrl = 'imgUrl'\n}\n\nexport interface DataEmoji extends WithName {\n  [EmojiProperties.unified]: string;\n  [EmojiProperties.variations]?: string[];\n  [EmojiProperties.added_in]: string;\n  [EmojiProperties.imgUrl]?: string;\n}\n\nexport type DataEmojis = DataEmoji[];\n\nexport type DataGroups = keyof typeof emojis;\n\nexport type WithName = {\n  [EmojiProperties.name]: string[];\n};\n","import { SkinTones } from '../types/exposedTypes';\n\nconst skinToneVariations = [\n  SkinTones.NEUTRAL,\n  SkinTones.LIGHT,\n  SkinTones.MEDIUM_LIGHT,\n  SkinTones.MEDIUM,\n  SkinTones.MEDIUM_DARK,\n  SkinTones.DARK\n];\n\nexport const skinTonesNamed = Object.entries(SkinTones).reduce(\n  (acc, [key, value]) => {\n    acc[value] = key;\n    return acc;\n  },\n  {} as Record<string, string>\n);\n\nexport const skinTonesMapped: Record<\n  string,\n  string\n> = skinToneVariations.reduce(\n  (mapped, skinTone) =>\n    Object.assign(mapped, {\n      [skinTone]: skinTone\n    }),\n  {}\n);\n\nexport default skinToneVariations;\n","import { DataEmoji } from './DataTypes';\nimport { allEmojis, emojiNames, emojiUnified } from './emojiSelectors';\n\nexport const alphaNumericEmojiIndex: BaseIndex = {};\n\nsetTimeout(() => {\n  allEmojis.reduce((searchIndex, emoji) => {\n    indexEmoji(emoji);\n    return searchIndex;\n  }, alphaNumericEmojiIndex as BaseIndex);\n});\n\ntype BaseIndex = Record<string, Record<string, DataEmoji>>;\n\nexport function indexEmoji(emoji: DataEmoji): void {\n  const joinedNameString = emojiNames(emoji)\n    .flat()\n    .join('')\n    .toLowerCase()\n    .replace(/[^a-zA-Z\\d]/g, '')\n    .split('');\n\n  joinedNameString.forEach(char => {\n    alphaNumericEmojiIndex[char] = alphaNumericEmojiIndex[char] ?? {};\n\n    alphaNumericEmojiIndex[char][emojiUnified(emoji)] = emoji;\n  });\n}\n","import { Categories } from '../config/categoryConfig';\nimport { cdnUrl } from '../config/cdnUrls';\nimport { CustomEmoji } from '../config/customEmojiConfig';\nimport emojis from '../data/emojis';\nimport skinToneVariations, {\n  skinTonesMapped\n} from '../data/skinToneVariations';\nimport { EmojiStyle, SkinTones } from '../types/exposedTypes';\n\nimport { DataEmoji, DataEmojis, EmojiProperties, WithName } from './DataTypes';\nimport { indexEmoji } from './alphaNumericEmojiIndex';\n\nexport function emojiNames(emoji: WithName): string[] {\n  return emoji[EmojiProperties.name] ?? [];\n}\n\nexport function addedIn(emoji: DataEmoji): number {\n  return parseFloat(emoji[EmojiProperties.added_in]);\n}\n\nexport function emojiName(emoji?: WithName): string {\n  if (!emoji) {\n    return '';\n  }\n\n  return emojiNames(emoji)[0];\n}\n\nexport function unifiedWithoutSkinTone(unified: string): string {\n  const splat = unified.split('-');\n  const [skinTone] = splat.splice(1, 1);\n\n  if (skinTonesMapped[skinTone]) {\n    return splat.join('-');\n  }\n\n  return unified;\n}\n\nexport function emojiUnified(emoji: DataEmoji, skinTone?: string): string {\n  const unified = emoji[EmojiProperties.unified];\n\n  if (!skinTone || !emojiHasVariations(emoji)) {\n    return unified;\n  }\n\n  return emojiVariationUnified(emoji, skinTone) ?? unified;\n}\n\nexport function emojisByCategory(category: Categories): DataEmojis {\n  // @ts-ignore\n  return emojis?.[category] ?? [];\n}\n\n// WARNING: DO NOT USE DIRECTLY\nexport function emojiUrlByUnified(\n  unified: string,\n  emojiStyle: EmojiStyle\n): string {\n  return `${cdnUrl(emojiStyle)}${unified}.png`;\n}\n\nexport function emojiVariations(emoji: DataEmoji): string[] {\n  return emoji[EmojiProperties.variations] ?? [];\n}\n\nexport function emojiHasVariations(emoji: DataEmoji): boolean {\n  return emojiVariations(emoji).length > 0;\n}\n\nexport function emojiVariationUnified(\n  emoji: DataEmoji,\n  skinTone?: string\n): string | undefined {\n  return skinTone\n    ? emojiVariations(emoji).find(variation => variation.includes(skinTone))\n    : emojiUnified(emoji);\n}\n\nexport function emojiByUnified(unified?: string): DataEmoji | undefined {\n  if (!unified) {\n    return;\n  }\n\n  if (allEmojisByUnified[unified]) {\n    return allEmojisByUnified[unified];\n  }\n\n  const withoutSkinTone = unifiedWithoutSkinTone(unified);\n  return allEmojisByUnified[withoutSkinTone];\n}\n\nexport const allEmojis: DataEmojis = Object.values(emojis).flat();\n\nexport function addCustomEmojis(customEmojis: CustomEmoji[]): void {\n  customEmojis.forEach(emoji => {\n    const emojiData = customToRegularEmoji(emoji);\n\n    if (allEmojisByUnified[emojiData[EmojiProperties.unified]]) {\n      return;\n    }\n\n    allEmojis.push(emojiData);\n    allEmojisByUnified[emojiData[EmojiProperties.unified]] = emojiData;\n    emojis[Categories.CUSTOM].push(emojiData as never);\n    indexEmoji(emojiData);\n  });\n}\n\nfunction customToRegularEmoji(emoji: CustomEmoji): DataEmoji {\n  return {\n    [EmojiProperties.name]: emoji.names.map(name => name.toLowerCase()),\n    [EmojiProperties.unified]: emoji.id.toLowerCase(),\n    [EmojiProperties.added_in]: '0',\n    [EmojiProperties.imgUrl]: emoji.imgUrl\n  };\n}\n\nconst allEmojisByUnified: {\n  [unified: string]: DataEmoji;\n} = {};\n\nsetTimeout(() => {\n  allEmojis.reduce((allEmojis, Emoji) => {\n    allEmojis[emojiUnified(Emoji)] = Emoji;\n    return allEmojis;\n  }, allEmojisByUnified);\n});\n\nexport function activeVariationFromUnified(unified: string): SkinTones | null {\n  const [, suspectedSkinTone] = unified.split('-') as [string, SkinTones];\n  return skinToneVariations.includes(suspectedSkinTone)\n    ? suspectedSkinTone\n    : null;\n}\n","import { EmojiStyle } from '../types/exposedTypes';\n\nconst CDN_URL_APPLE =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-apple/img/apple/64/';\nconst CDN_URL_FACEBOOK =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-facebook/img/facebook/64/';\nconst CDN_URL_TWITTER =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-twitter/img/twitter/64/';\nconst CDN_URL_GOOGLE =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-google/img/google/64/';\n\nexport function cdnUrl(emojiStyle: EmojiStyle): string {\n  switch (emojiStyle) {\n    case EmojiStyle.TWITTER:\n      return CDN_URL_TWITTER;\n    case EmojiStyle.GOOGLE:\n      return CDN_URL_GOOGLE;\n    case EmojiStyle.FACEBOOK:\n      return CDN_URL_FACEBOOK;\n    case EmojiStyle.APPLE:\n    default:\n      return CDN_URL_APPLE;\n  }\n}\n","import { GetEmojiUrl } from '../components/emoji/BaseEmojiProps';\nimport {\n  addCustomEmojis,\n  emojiUrlByUnified\n} from '../dataUtils/emojiSelectors';\nimport {\n  EmojiClickData,\n  EmojiStyle,\n  SkinTonePickerLocation,\n  SkinTones,\n  SuggestionMode,\n  Theme\n} from '../types/exposedTypes';\n\nimport {\n  CategoriesConfig,\n  baseCategoriesConfig,\n  mergeCategoriesConfig\n} from './categoryConfig';\nimport { CustomEmoji } from './customEmojiConfig';\n\nconst KNOWN_FAILING_EMOJIS = ['2640-fe0f', '2642-fe0f', '2695-fe0f'];\n\nexport const DEFAULT_SEARCH_PLACEHOLDER = 'Search';\n\nexport function mergeConfig(\n  userConfig: PickerConfig = {}\n): PickerConfigInternal {\n  const base = basePickerConfig();\n\n  const previewConfig = Object.assign(\n    base.previewConfig,\n    userConfig.previewConfig ?? {}\n  );\n  const config = Object.assign(base, userConfig);\n\n  const categories = mergeCategoriesConfig(userConfig.categories, {\n    suggestionMode: config.suggestedEmojisMode\n  });\n\n  addCustomEmojis(config.customEmojis ?? []);\n\n  const skinTonePickerLocation = config.searchDisabled\n    ? SkinTonePickerLocation.PREVIEW\n    : config.skinTonePickerLocation;\n\n  return {\n    ...config,\n    categories,\n    previewConfig,\n    skinTonePickerLocation\n  };\n}\n\nexport function basePickerConfig(): PickerConfigInternal {\n  return {\n    autoFocusSearch: true,\n    categories: baseCategoriesConfig(),\n    customEmojis: [],\n    defaultSkinTone: SkinTones.NEUTRAL,\n    emojiStyle: EmojiStyle.APPLE,\n    emojiVersion: null,\n    getEmojiUrl: emojiUrlByUnified,\n    height: 450,\n    lazyLoadEmojis: false,\n    previewConfig: {\n      ...basePreviewConfig\n    },\n    searchDisabled: false,\n    searchPlaceHolder: DEFAULT_SEARCH_PLACEHOLDER,\n    searchPlaceholder: DEFAULT_SEARCH_PLACEHOLDER,\n    skinTonePickerLocation: SkinTonePickerLocation.SEARCH,\n    skinTonesDisabled: false,\n    suggestedEmojisMode: SuggestionMode.FREQUENT,\n    theme: Theme.LIGHT,\n    unicodeToHide: new Set<string>(KNOWN_FAILING_EMOJIS),\n    width: 350\n  };\n}\n\nexport type PickerConfigInternal = {\n  emojiVersion: string | null;\n  searchPlaceHolder: string;\n  searchPlaceholder: string;\n  defaultSkinTone: SkinTones;\n  skinTonesDisabled: boolean;\n  autoFocusSearch: boolean;\n  emojiStyle: EmojiStyle;\n  categories: CategoriesConfig;\n  theme: Theme;\n  suggestedEmojisMode: SuggestionMode;\n  lazyLoadEmojis: boolean;\n  previewConfig: PreviewConfig;\n  height: PickerDimensions;\n  width: PickerDimensions;\n  getEmojiUrl: GetEmojiUrl;\n  searchDisabled: boolean;\n  skinTonePickerLocation: SkinTonePickerLocation;\n  unicodeToHide: Set<string>;\n  customEmojis: CustomEmoji[];\n};\n\nexport type PreviewConfig = {\n  defaultEmoji: string;\n  defaultCaption: string;\n  showPreview: boolean;\n};\n\nconst basePreviewConfig: PreviewConfig = {\n  defaultEmoji: '1f60a',\n  defaultCaption: \"What's your mood?\",\n  showPreview: true\n};\n\ntype ConfigExternal = {\n  previewConfig: Partial<PreviewConfig>;\n  onEmojiClick: (emoji: EmojiClickData, event: MouseEvent) => void;\n} & Omit<PickerConfigInternal, 'previewConfig' | 'unicodeToHide'>;\n\nexport type PickerConfig = Partial<ConfigExternal>;\n\nexport type PickerDimensions = string | number;\n","import * as React from 'react';\n\nimport {\n  basePickerConfig,\n  mergeConfig,\n  PickerConfig,\n  PickerConfigInternal\n} from '../../config/config';\n\ntype Props = PickerConfig &\n  Readonly<{\n    children: React.ReactNode;\n  }>;\n\nconst ConfigContext = React.createContext<PickerConfigInternal>(\n  basePickerConfig()\n);\n\nexport function PickerConfigProvider({ children, ...config }: Props) {\n  const [mergedConfig] = React.useState(() => mergeConfig(config));\n  return (\n    <ConfigContext.Provider value={mergedConfig}>\n      {children}\n    </ConfigContext.Provider>\n  );\n}\n\nexport function usePickerConfig() {\n  return React.useContext(ConfigContext);\n}\n","import React from 'react';\n\nimport { EmojiClickData } from '../types/exposedTypes';\n\nexport type MutableConfig = {\n  onEmojiClick?: (emoji: EmojiClickData, event: MouseEvent) => void;\n};\n\nexport const MutableConfigContext = React.createContext<\n  React.MutableRefObject<MutableConfig>\n>({} as React.MutableRefObject<MutableConfig>);\n\nexport function useMutableConfig(): React.MutableRefObject<MutableConfig> {\n  const mutableConfig = React.useContext(MutableConfigContext);\n  return mutableConfig;\n}\n\nexport function useDefineMutableConfig(\n  config: MutableConfig\n): React.MutableRefObject<MutableConfig> {\n  const MutableConfigRef = React.useRef<MutableConfig>({\n    onEmojiClick: config.onEmojiClick || emptyFunc\n  });\n\n  React.useEffect(() => {\n    MutableConfigRef.current.onEmojiClick = config.onEmojiClick || emptyFunc;\n  }, [config.onEmojiClick]);\n\n  return MutableConfigRef;\n}\n\nfunction emptyFunc() {}\n","import { isSystemDarkTheme } from '../DomUtils/isDarkTheme';\nimport { usePickerConfig } from '../components/context/PickerConfigContext';\nimport {\n  EmojiClickData,\n  EmojiStyle,\n  SkinTonePickerLocation,\n  SkinTones,\n  SuggestionMode,\n  Theme\n} from '../types/exposedTypes';\n\nimport { CategoriesConfig } from './categoryConfig';\nimport {\n  DEFAULT_SEARCH_PLACEHOLDER,\n  PickerDimensions,\n  PreviewConfig\n} from './config';\nimport { CustomEmoji } from './customEmojiConfig';\nimport { useMutableConfig } from './mutableConfig';\n\nexport function useSearchPlaceHolderConfig(): string {\n  const { searchPlaceHolder, searchPlaceholder } = usePickerConfig();\n  return (\n    [searchPlaceHolder, searchPlaceholder].find(\n      p => p !== DEFAULT_SEARCH_PLACEHOLDER\n    ) ?? DEFAULT_SEARCH_PLACEHOLDER\n  );\n}\n\nexport function useDefaultSkinToneConfig(): SkinTones {\n  const { defaultSkinTone } = usePickerConfig();\n  return defaultSkinTone;\n}\n\nexport function useSkinTonesDisabledConfig(): boolean {\n  const { skinTonesDisabled } = usePickerConfig();\n  return skinTonesDisabled;\n}\n\nexport function useEmojiStyleConfig(): EmojiStyle {\n  const { emojiStyle } = usePickerConfig();\n  return emojiStyle;\n}\n\nexport function useAutoFocusSearchConfig(): boolean {\n  const { autoFocusSearch } = usePickerConfig();\n  return autoFocusSearch;\n}\n\nexport function useCategoriesConfig(): CategoriesConfig {\n  const { categories } = usePickerConfig();\n  return categories;\n}\n\nexport function useCustomEmojisConfig(): CustomEmoji[] {\n  const { customEmojis } = usePickerConfig();\n  return customEmojis;\n}\n\nexport function useOnEmojiClickConfig(): (\n  emoji: EmojiClickData,\n  event: MouseEvent\n) => void {\n  const { current } = useMutableConfig();\n  return current.onEmojiClick || (() => {});\n}\n\nexport function usePreviewConfig(): PreviewConfig {\n  const { previewConfig } = usePickerConfig();\n  return previewConfig;\n}\n\nexport function useThemeConfig(): Theme {\n  const { theme } = usePickerConfig();\n\n  if (theme === Theme.AUTO) {\n    return isSystemDarkTheme() ? Theme.DARK : Theme.LIGHT;\n  }\n\n  return theme;\n}\n\nexport function useSuggestedEmojisModeConfig(): SuggestionMode {\n  const { suggestedEmojisMode } = usePickerConfig();\n  return suggestedEmojisMode;\n}\n\nexport function useLazyLoadEmojisConfig(): boolean {\n  const { lazyLoadEmojis } = usePickerConfig();\n  return lazyLoadEmojis;\n}\n\nexport function usePickerSizeConfig(): {\n  height: PickerDimensions;\n  width: PickerDimensions;\n} {\n  const { height, width } = usePickerConfig();\n  return { height: getDimension(height), width: getDimension(width) };\n}\n\nexport function useEmojiVersionConfig(): string | null {\n  const { emojiVersion } = usePickerConfig();\n  return emojiVersion;\n}\n\nexport function useSearchDisabledConfig(): boolean {\n  const { searchDisabled } = usePickerConfig();\n  return searchDisabled;\n}\n\nexport function useSkinTonePickerLocationConfig(): SkinTonePickerLocation {\n  const { skinTonePickerLocation } = usePickerConfig();\n  return skinTonePickerLocation;\n}\n\nexport function useUnicodeToHide() {\n  const { unicodeToHide } = usePickerConfig();\n  return unicodeToHide;\n}\n\nexport function useGetEmojiUrlConfig(): (\n  unified: string,\n  style: EmojiStyle\n) => string {\n  const { getEmojiUrl } = usePickerConfig();\n  return getEmojiUrl;\n}\n\nfunction getDimension(dimensionConfig: PickerDimensions): PickerDimensions {\n  return typeof dimensionConfig === 'number'\n    ? `${dimensionConfig}px`\n    : dimensionConfig;\n}\n","import { useRef, useState } from 'react';\n\nexport function useDebouncedState<T>(\n  initialValue: T,\n  delay: number = 0\n): [T, (value: T) => Promise<T>] {\n  const [state, setState] = useState<T>(initialValue);\n  const timer = useRef<number | null>(null);\n\n  function debouncedSetState(value: T) {\n    return new Promise<T>(resolve => {\n      if (timer.current) {\n        clearTimeout(timer.current);\n      }\n\n      timer.current = window?.setTimeout(() => {\n        setState(value);\n        resolve(value);\n      }, delay);\n    });\n  }\n\n  return [state, debouncedSetState];\n}\n","import { useRef, useMemo } from 'react';\n\nimport { useEmojiVersionConfig } from '../config/useConfig';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport {\n  addedIn,\n  allEmojis,\n  emojiUnified,\n  unifiedWithoutSkinTone\n} from '../dataUtils/emojiSelectors';\n\nimport { useIsUnicodeHidden } from './useHideEmojisByUniocode';\n\nexport function useDisallowedEmojis() {\n  const DisallowedEmojisRef = useRef<Record<string, boolean>>({});\n  const emojiVersionConfig = useEmojiVersionConfig();\n\n  return useMemo(() => {\n    const emojiVersion = parseFloat(`${emojiVersionConfig}`);\n\n    if (!emojiVersionConfig || Number.isNaN(emojiVersion)) {\n      return DisallowedEmojisRef.current;\n    }\n\n    return allEmojis.reduce((disallowedEmojis, emoji) => {\n      if (addedInNewerVersion(emoji, emojiVersion)) {\n        disallowedEmojis[emojiUnified(emoji)] = true;\n      }\n\n      return disallowedEmojis;\n    }, DisallowedEmojisRef.current);\n  }, [emojiVersionConfig]);\n}\n\nexport function useIsEmojiDisallowed() {\n  const disallowedEmojis = useDisallowedEmojis();\n  const isUnicodeHidden = useIsUnicodeHidden();\n\n  return function isEmojiDisallowed(emoji: DataEmoji) {\n    const unified = unifiedWithoutSkinTone(emojiUnified(emoji));\n\n    return Boolean(disallowedEmojis[unified] || isUnicodeHidden(unified));\n  };\n}\n\nfunction addedInNewerVersion(\n  emoji: DataEmoji,\n  supportedLevel: number\n): boolean {\n  return addedIn(emoji) > supportedLevel;\n}\n","import * as React from 'react';\nimport { useState } from 'react';\n\nimport { useDefaultSkinToneConfig } from '../../config/useConfig';\nimport { DataEmoji } from '../../dataUtils/DataTypes';\nimport { alphaNumericEmojiIndex } from '../../dataUtils/alphaNumericEmojiIndex';\nimport { useDebouncedState } from '../../hooks/useDebouncedState';\nimport { useDisallowedEmojis } from '../../hooks/useDisallowedEmojis';\nimport { FilterDict } from '../../hooks/useFilter';\nimport { useMarkInitialLoad } from '../../hooks/useInitialLoad';\nimport { SkinTones } from '../../types/exposedTypes';\n\nexport function PickerContextProvider({ children }: Props) {\n  const disallowedEmojis = useDisallowedEmojis();\n  const defaultSkinTone = useDefaultSkinToneConfig();\n\n  // Initialize the filter with the inititial dictionary\n  const filterRef = React.useRef<FilterState>(alphaNumericEmojiIndex);\n  const disallowClickRef = React.useRef<boolean>(false);\n  const disallowMouseRef = React.useRef<boolean>(false);\n  const disallowedEmojisRef = React.useRef<Record<string, boolean>>(\n    disallowedEmojis\n  );\n\n  const suggestedUpdateState = useDebouncedState(Date.now(), 200);\n  const searchTerm = useDebouncedState('', 100);\n  const skinToneFanOpenState = useState<boolean>(false);\n  const activeSkinTone = useState<SkinTones>(defaultSkinTone);\n  const activeCategoryState = useState<ActiveCategoryState>(null);\n  const emojisThatFailedToLoadState = useState<Set<string>>(new Set());\n  const emojiVariationPickerState = useState<DataEmoji | null>(null);\n  const [isPastInitialLoad, setIsPastInitialLoad] = useState(false);\n\n  useMarkInitialLoad(setIsPastInitialLoad);\n\n  return (\n    <PickerContext.Provider\n      value={{\n        activeCategoryState,\n        activeSkinTone,\n        disallowClickRef,\n        disallowMouseRef,\n        disallowedEmojisRef,\n        emojiVariationPickerState,\n        emojisThatFailedToLoadState,\n        filterRef,\n        isPastInitialLoad,\n        searchTerm,\n        skinToneFanOpenState,\n        suggestedUpdateState\n      }}\n    >\n      {children}\n    </PickerContext.Provider>\n  );\n}\n\ntype ReactState<T> = [T, React.Dispatch<React.SetStateAction<T>>];\n\nconst PickerContext = React.createContext<{\n  searchTerm: [string, (term: string) => Promise<string>];\n  suggestedUpdateState: [number, (term: number) => void];\n  activeCategoryState: ReactState<ActiveCategoryState>;\n  activeSkinTone: ReactState<SkinTones>;\n  emojisThatFailedToLoadState: ReactState<Set<string>>;\n  isPastInitialLoad: boolean;\n  emojiVariationPickerState: ReactState<DataEmoji | null>;\n  skinToneFanOpenState: ReactState<boolean>;\n  filterRef: React.MutableRefObject<FilterState>;\n  disallowClickRef: React.MutableRefObject<boolean>;\n  disallowMouseRef: React.MutableRefObject<boolean>;\n  disallowedEmojisRef: React.MutableRefObject<Record<string, boolean>>;\n}>({\n  activeCategoryState: [null, () => {}],\n  activeSkinTone: [SkinTones.NEUTRAL, () => {}],\n  disallowClickRef: { current: false },\n  disallowMouseRef: { current: false },\n  disallowedEmojisRef: { current: {} },\n  emojiVariationPickerState: [null, () => {}],\n  emojisThatFailedToLoadState: [new Set(), () => {}],\n  filterRef: { current: {} },\n  isPastInitialLoad: true,\n  searchTerm: ['', () => new Promise<string>(() => undefined)],\n  skinToneFanOpenState: [false, () => {}],\n  suggestedUpdateState: [Date.now(), () => {}]\n});\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n}>;\n\nexport function useFilterRef() {\n  const { filterRef } = React.useContext(PickerContext);\n  return filterRef;\n}\n\nexport function useDisallowClickRef() {\n  const { disallowClickRef } = React.useContext(PickerContext);\n  return disallowClickRef;\n}\n\nexport function useDisallowMouseRef() {\n  const { disallowMouseRef } = React.useContext(PickerContext);\n  return disallowMouseRef;\n}\n\nexport function useSearchTermState() {\n  const { searchTerm } = React.useContext(PickerContext);\n  return searchTerm;\n}\n\nexport function useActiveSkinToneState(): [\n  SkinTones,\n  (skinTone: SkinTones) => void\n] {\n  const { activeSkinTone } = React.useContext(PickerContext);\n  return activeSkinTone;\n}\n\nexport function useEmojisThatFailedToLoadState() {\n  const { emojisThatFailedToLoadState } = React.useContext(PickerContext);\n  return emojisThatFailedToLoadState;\n}\n\nexport function useIsPastInitialLoad(): boolean {\n  const { isPastInitialLoad } = React.useContext(PickerContext);\n  return isPastInitialLoad;\n}\n\nexport function useEmojiVariationPickerState() {\n  const { emojiVariationPickerState } = React.useContext(PickerContext);\n  return emojiVariationPickerState;\n}\n\nexport function useSkinToneFanOpenState() {\n  const { skinToneFanOpenState } = React.useContext(PickerContext);\n  return skinToneFanOpenState;\n}\n\nexport function useDisallowedEmojisRef() {\n  const { disallowedEmojisRef } = React.useContext(PickerContext);\n  return disallowedEmojisRef;\n}\n\nexport function useUpdateSuggested(): [number, () => void] {\n  const { suggestedUpdateState } = React.useContext(PickerContext);\n\n  const [suggestedUpdated, setsuggestedUpdate] = suggestedUpdateState;\n  return [\n    suggestedUpdated,\n    function updateSuggested() {\n      setsuggestedUpdate(Date.now());\n    }\n  ];\n}\n\nexport type FilterState = Record<string, FilterDict>;\n\ntype ActiveCategoryState = null | string;\n","import { useEffect } from 'react';\nimport * as React from 'react';\n\nexport function useMarkInitialLoad(\n  dispatch: React.Dispatch<React.SetStateAction<boolean>>\n) {\n  useEffect(() => {\n    dispatch(true);\n  }, [dispatch]);\n}\n","import { useEffect } from 'react';\n\nimport { useBodyRef } from '../components/context/ElementRefContext';\nimport { useDisallowMouseRef } from '../components/context/PickerContext';\n\nexport function useDisallowMouseMove() {\n  const DisallowMouseRef = useDisallowMouseRef();\n  return function disallowMouseMove() {\n    DisallowMouseRef.current = true;\n  };\n}\n\nexport function useAllowMouseMove() {\n  const DisallowMouseRef = useDisallowMouseRef();\n  return function allowMouseMove() {\n    DisallowMouseRef.current = false;\n  };\n}\n\nexport function useIsMouseDisallowed() {\n  const DisallowMouseRef = useDisallowMouseRef();\n  return function isMouseDisallowed() {\n    return DisallowMouseRef.current;\n  };\n}\n\nexport function useOnMouseMove() {\n  const BodyRef = useBodyRef();\n  const allowMouseMove = useAllowMouseMove();\n  const isMouseDisallowed = useIsMouseDisallowed();\n\n  useEffect(() => {\n    const bodyRef = BodyRef.current;\n    bodyRef?.addEventListener('mousemove', onMouseMove, {\n      passive: true\n    });\n\n    function onMouseMove() {\n      if (isMouseDisallowed()) {\n        allowMouseMove();\n      }\n    }\n    return () => {\n      bodyRef?.removeEventListener('mousemove', onMouseMove);\n    };\n  }, [BodyRef, allowMouseMove, isMouseDisallowed]);\n}\n","import { NullableElement } from './selectors';\n\nexport function elementCountInRow(\n  parent: NullableElement,\n  element: NullableElement\n): number {\n  if (!parent || !element) {\n    return 0;\n  }\n\n  const parentWidth = parent.getBoundingClientRect().width;\n  const elementWidth = element.getBoundingClientRect().width;\n  return Math.floor(parentWidth / elementWidth);\n}\n\nexport function elementIndexInRow(\n  parent: NullableElement,\n  element: NullableElement\n): number {\n  if (!parent || !element) {\n    return 0;\n  }\n\n  const elementWidth = element.getBoundingClientRect().width;\n  const elementLeft = element.getBoundingClientRect().left;\n  const parentLeft = parent.getBoundingClientRect().left;\n\n  return Math.floor((elementLeft - parentLeft) / elementWidth);\n}\n\nexport function rowNumber(\n  parent: NullableElement,\n  element: NullableElement\n): number {\n  if (!parent || !element) {\n    return 0;\n  }\n\n  const elementHeight = element.getBoundingClientRect().height;\n  const elementTop = element.getBoundingClientRect().top;\n  const parentTop = parent.getBoundingClientRect().top;\n  return Math.round((elementTop - parentTop) / elementHeight);\n}\n\nexport function hasNextRow(\n  parent: NullableElement,\n  element: NullableElement\n): boolean {\n  if (!parent || !element) {\n    return false;\n  }\n\n  const elementHeight = element.getBoundingClientRect().height;\n  const elementTop = element.getBoundingClientRect().top;\n  const parentTop = parent.getBoundingClientRect().top;\n  const parentHeight = parent.getBoundingClientRect().height;\n\n  return Math.round(elementTop - parentTop + elementHeight) < parentHeight;\n}\n\nfunction getRowElements(\n  elements: HTMLElement[],\n  row: number,\n  elementsInRow: number\n): HTMLElement[] {\n  if (row === -1) {\n    const lastRow = Math.floor((elements.length - 1) / elementsInRow);\n    const firstElementIndex = lastRow * elementsInRow;\n    const lastElementIndex = elements.length - 1;\n    return elements.slice(firstElementIndex, lastElementIndex + 1);\n  }\n\n  return elements.slice(row * elementsInRow, (row + 1) * elementsInRow);\n}\n\nfunction getNextRowElements(\n  allElements: HTMLElement[],\n  currentRow: number,\n  elementsInRow: number\n): HTMLElement[] {\n  const nextRow = currentRow + 1;\n\n  if (nextRow * elementsInRow > allElements.length) {\n    return [];\n  }\n\n  return getRowElements(allElements, nextRow, elementsInRow);\n}\n\nexport function getElementInRow(\n  elements: HTMLElement[],\n  row: number,\n  elementsInRow: number,\n  indexInRow: number\n): NullableElement {\n  const rowElements = getRowElements(elements, row, elementsInRow);\n  // get element, default to last\n  return rowElements[indexInRow] || rowElements[rowElements.length - 1] || null;\n}\n\nexport function getElementInNextRow(\n  allElements: HTMLElement[],\n  currentRow: number,\n  elementsInRow: number,\n  index: number\n): NullableElement {\n  const nextRowElements = getNextRowElements(\n    allElements,\n    currentRow,\n    elementsInRow\n  );\n\n  // return item in index, or last item in row\n  return (\n    nextRowElements[index] ||\n    nextRowElements[nextRowElements.length - 1] ||\n    null\n  );\n}\n\nexport function getElementInPrevRow(\n  allElements: HTMLElement[],\n  currentRow: number,\n  elementsInRow: number,\n  index: number\n): NullableElement {\n  const prevRowElements = getRowElements(\n    allElements,\n    currentRow - 1,\n    elementsInRow\n  );\n\n  // default to last\n  return (\n    prevRowElements[index] ||\n    prevRowElements[prevRowElements.length - 1] ||\n    null\n  );\n}\n\nexport function firstVisibleElementInContainer(\n  parent: NullableElement,\n  elements: HTMLElement[]\n): NullableElement {\n  if (!parent || !elements.length) {\n    return null;\n  }\n\n  const parentTop = parent.getBoundingClientRect().top;\n  const parentBottom = parent.getBoundingClientRect().bottom;\n\n  const visibleElements = elements.find(element => {\n    const elementTop = element.getBoundingClientRect().top;\n    const elementBottom = element.getBoundingClientRect().bottom;\n\n    return (\n      (elementTop >= parentTop && elementTop <= parentBottom) ||\n      (elementBottom >= parentTop && elementBottom <= parentBottom)\n    );\n  });\n\n  return visibleElements || null;\n}\n\nexport function hasNextElementSibling(element: HTMLElement) {\n  return !!element.nextElementSibling;\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\nimport { useEffect } from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { focusFirstVisibleEmoji } from '../../DomUtils/keyboardNavigation';\nimport {\n  buttonFromTarget,\n  elementHeight,\n  emojiTrueOffsetTop,\n  emojiTruOffsetLeft\n} from '../../DomUtils/selectors';\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig\n} from '../../config/useConfig';\nimport {\n  emojiHasVariations,\n  emojiUnified,\n  emojiVariations\n} from '../../dataUtils/emojiSelectors';\nimport {\n  useAnchoredEmojiRef,\n  useBodyRef,\n  useSetAnchoredEmojiRef,\n  useVariationPickerRef\n} from '../context/ElementRefContext';\nimport { useEmojiVariationPickerState } from '../context/PickerContext';\nimport { ClickableEmoji } from '../emoji/Emoji';\nimport './EmojiVariationPicker.css';\n\nenum Direction {\n  Up,\n  Down\n}\n\nexport function EmojiVariationPicker() {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  const VariationPickerRef = useVariationPickerRef();\n  const [emoji] = useEmojiVariationPickerState();\n  const emojiStyle = useEmojiStyleConfig();\n\n  const { getTop, getMenuDirection } = useVariationPickerTop(\n    VariationPickerRef\n  );\n  const setAnchoredEmojiRef = useSetAnchoredEmojiRef();\n  const getPointerStyle = usePointerStyle(VariationPickerRef);\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  const button = buttonFromTarget(AnchoredEmojiRef.current);\n\n  const visible =\n    emoji &&\n    button &&\n    emojiHasVariations(emoji) &&\n    button.classList.contains(ClassNames.emojiHasVariations);\n\n  useEffect(() => {\n    if (!visible) {\n      return;\n    }\n\n    focusFirstVisibleEmoji(VariationPickerRef.current);\n  }, [VariationPickerRef, visible, AnchoredEmojiRef]);\n\n  let top, pointerStyle;\n\n  if (!visible && AnchoredEmojiRef.current) {\n    setAnchoredEmojiRef(null);\n  } else {\n    top = getTop();\n    pointerStyle = getPointerStyle();\n  }\n\n  return (\n    <div\n      ref={VariationPickerRef}\n      className={clsx(ClassNames.variationPicker, {\n        visible,\n        'pointing-up': getMenuDirection() === Direction.Down\n      })}\n      style={{ top }}\n    >\n      {visible && emoji\n        ? [emojiUnified(emoji)]\n            .concat(emojiVariations(emoji))\n            .slice(0, 6)\n            .map(unified => (\n              <ClickableEmoji\n                key={unified}\n                emoji={emoji}\n                unified={unified}\n                emojiStyle={emojiStyle}\n                showVariations={false}\n                getEmojiUrl={getEmojiUrl}\n              />\n            ))\n        : null}\n      <div className=\"epr-emoji-pointer\" style={pointerStyle} />\n    </div>\n  );\n}\n\nfunction usePointerStyle(VariationPickerRef: React.RefObject<HTMLElement>) {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  return function getPointerStyle() {\n    const style: React.CSSProperties = {};\n    if (!VariationPickerRef.current) {\n      return style;\n    }\n\n    if (AnchoredEmojiRef.current) {\n      const button = buttonFromTarget(AnchoredEmojiRef.current);\n\n      const offsetLeft = emojiTruOffsetLeft(button);\n\n      if (!button) {\n        return style;\n      }\n\n      // half of the button\n      style.left = offsetLeft + button?.clientWidth / 2;\n    }\n\n    return style;\n  };\n}\n\nfunction useVariationPickerTop(\n  VariationPickerRef: React.RefObject<HTMLElement>\n) {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  const BodyRef = useBodyRef();\n  let direction = Direction.Up;\n\n  return {\n    getMenuDirection,\n    getTop\n  };\n\n  function getMenuDirection() {\n    return direction;\n  }\n\n  function getTop() {\n    direction = Direction.Up;\n    let emojiOffsetTop = 0;\n\n    if (!VariationPickerRef.current) {\n      return 0;\n    }\n\n    const height = elementHeight(VariationPickerRef.current);\n\n    if (AnchoredEmojiRef.current) {\n      const bodyRef = BodyRef.current;\n      const button = buttonFromTarget(AnchoredEmojiRef.current);\n\n      const buttonHeight = elementHeight(button);\n\n      emojiOffsetTop = emojiTrueOffsetTop(button);\n\n      const scrollTop = bodyRef?.scrollTop ?? 0;\n\n      if (scrollTop > emojiOffsetTop - height) {\n        direction = Direction.Down;\n        emojiOffsetTop += buttonHeight + height;\n      }\n    }\n\n    return emojiOffsetTop - height;\n  }\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\nimport './Flex.css';\n\nexport enum FlexDirection {\n  ROW = 'FlexRow',\n  COLUMN = 'FlexColumn'\n}\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n  direction?: FlexDirection;\n}>;\n\nexport default function Flex({\n  children,\n  className,\n  style = {},\n  direction = FlexDirection.ROW\n}: Props) {\n  return (\n    <div style={{ ...style }} className={clsx('Flex', className, direction)}>\n      {children}\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { useSkinTonesDisabledConfig } from '../../config/useConfig';\nimport skinToneVariations, {\n  skinTonesNamed\n} from '../../data/skinToneVariations';\nimport { useCloseAllOpenToggles } from '../../hooks/useCloseAllOpenToggles';\nimport { useFocusSearchInput } from '../../hooks/useFocus';\nimport { SkinTones } from '../../types/exposedTypes';\nimport Absolute from '../Layout/Absolute';\nimport Relative from '../Layout/Relative';\nimport { Button } from '../atoms/Button';\nimport { useSkinTonePickerRef } from '../context/ElementRefContext';\nimport {\n  useActiveSkinToneState,\n  useSkinToneFanOpenState\n} from '../context/PickerContext';\nimport './SkinTonePicker.css';\n\nconst ITEM_SIZE = 28;\n\ntype Props = {\n  direction?: SkinTonePickerDirection;\n};\n\nexport function SkinTonePickerMenu() {\n  return (\n    <Relative style={{ height: ITEM_SIZE }}>\n      <Absolute style={{ bottom: 0, right: 0 }}>\n        <SkinTonePicker direction={SkinTonePickerDirection.VERTICAL} />\n      </Absolute>\n    </Relative>\n  );\n}\n\nexport function SkinTonePicker({\n  direction = SkinTonePickerDirection.HORIZONTAL\n}: Props) {\n  const SkinTonePickerRef = useSkinTonePickerRef();\n  const isDisabled = useSkinTonesDisabledConfig();\n  const [isOpen, setIsOpen] = useSkinToneFanOpenState();\n  const [activeSkinTone, setActiveSkinTone] = useActiveSkinToneState();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n  const focusSearchInput = useFocusSearchInput();\n\n  if (isDisabled) {\n    return null;\n  }\n\n  const fullWidth = `${ITEM_SIZE * skinToneVariations.length}px`;\n\n  const expandedSize = isOpen ? fullWidth : ITEM_SIZE + 'px';\n\n  const vertical = direction === SkinTonePickerDirection.VERTICAL;\n\n  return (\n    <Relative\n      className={clsx('epr-skin-tones', direction, {\n        [ClassNames.open]: isOpen\n      })}\n      style={\n        vertical\n          ? { flexBasis: expandedSize, height: expandedSize }\n          : { flexBasis: expandedSize }\n      }\n    >\n      <div className=\"epr-skin-tone-select\" ref={SkinTonePickerRef}>\n        {skinToneVariations.map((skinToneVariation, i) => {\n          const active = skinToneVariation === activeSkinTone;\n          return (\n            <Button\n              style={{\n                transform: clsx(\n                  vertical\n                    ? `translateY(-${i * (isOpen ? ITEM_SIZE : 0)}px)`\n                    : `translateX(-${i * (isOpen ? ITEM_SIZE : 0)}px)`,\n                  isOpen && active && 'scale(1.3)'\n                )\n              }}\n              onClick={() => {\n                if (isOpen) {\n                  setActiveSkinTone(skinToneVariation);\n                  focusSearchInput();\n                } else {\n                  setIsOpen(true);\n                }\n                closeAllOpenToggles();\n              }}\n              key={skinToneVariation}\n              className={clsx(`epr-tone-${skinToneVariation}`, 'epr-tone', {\n                [ClassNames.active]: active\n              })}\n              tabIndex={isOpen ? 0 : -1}\n              aria-pressed={active}\n              aria-label={`Skin tone ${\n                skinTonesNamed[skinToneVariation as SkinTones]\n              }`}\n            ></Button>\n          );\n        })}\n      </div>\n    </Relative>\n  );\n}\n\nexport enum SkinTonePickerDirection {\n  VERTICAL = ClassNames.vertical,\n  HORIZONTAL = ClassNames.horizontal\n}\n","import { DataEmoji } from '../dataUtils/DataTypes';\nimport {\n  emojiByUnified,\n  unifiedWithoutSkinTone,\n} from '../dataUtils/emojiSelectors';\n\nimport { asSelectors, ClassNames } from './classNames';\nimport { firstVisibleElementInContainer } from './elementPositionInRow';\n\nexport type NullableElement = HTMLElement | null;\n\nexport const EmojiButtonSelector = `button${asSelectors(ClassNames.emoji)}`;\nexport const VisibleEmojiSelector = [\n  EmojiButtonSelector,\n  asSelectors(ClassNames.visible),\n  `:not(${asSelectors(ClassNames.hidden)})`,\n].join('');\n\nexport function buttonFromTarget(\n  emojiElement: NullableElement\n): HTMLButtonElement | null {\n  return emojiElement?.closest(EmojiButtonSelector) ?? null;\n}\n\nexport function isEmojiButton(element: NullableElement): boolean {\n  if (!element) {\n    return false;\n  }\n\n  return element.matches(EmojiButtonSelector);\n}\n\nexport function emojiFromElement(\n  element: NullableElement\n): [DataEmoji, string] | [] {\n  const originalUnified = originalUnifiedFromEmojiElement(element);\n  const unified = unifiedFromEmojiElement(element);\n\n  if (!originalUnified) {\n    return [];\n  }\n\n  const emoji = emojiByUnified(originalUnified);\n\n  if (!emoji) {\n    return [];\n  }\n\n  return [emoji, unified as string];\n}\n\nexport function isEmojiElement(element: NullableElement): boolean {\n  return Boolean(\n    element?.matches(EmojiButtonSelector) ||\n      element?.parentElement?.matches(EmojiButtonSelector)\n  );\n}\n\nexport function categoryLabelFromCategory(\n  category: NullableElement\n): NullableElement {\n  return category?.querySelector(asSelectors(ClassNames.label)) ?? null;\n}\n\nexport function closestCategoryLabel(\n  element: NullableElement\n): NullableElement {\n  const category = closestCategory(element);\n  return categoryLabelFromCategory(category);\n}\n\nexport function elementHeight(element: NullableElement): number {\n  return element?.clientHeight ?? 0;\n}\n\nexport function emojiTrueOffsetTop(element: NullableElement): number {\n  if (!element) {\n    return 0;\n  }\n\n  const button = buttonFromTarget(element);\n  const category = closestCategory(button);\n\n  // compensate for the label height\n  const labelHeight = categoryLabelHeight(category);\n\n  return elementOffsetTop(button) + elementOffsetTop(category) + labelHeight;\n}\n\nexport function categoryLabelHeight(category: NullableElement): number {\n  if (!category) {\n    return 0;\n  }\n\n  const categoryWithoutLabel = category.querySelector(\n    asSelectors(ClassNames.categoryContent)\n  );\n\n  return (\n    (category?.clientHeight ?? 0) - (categoryWithoutLabel?.clientHeight ?? 0)\n  );\n}\n\nexport function isEmojiBehindLabel(emoji: NullableElement): boolean {\n  if (!emoji) {\n    return false;\n  }\n\n  return (\n    emojiDistanceFromScrollTop(emoji) <\n    categoryLabelHeight(closestCategory(emoji))\n  );\n}\n\nexport function queryScrollBody(root: NullableElement): NullableElement {\n  if (!root) return null;\n\n  return root.matches(asSelectors(ClassNames.scrollBody))\n    ? root\n    : root.querySelector(asSelectors(ClassNames.scrollBody));\n}\n\nexport function emojiDistanceFromScrollTop(emoji: NullableElement): number {\n  if (!emoji) {\n    return 0;\n  }\n\n  return emojiTrueOffsetTop(emoji) - (closestScrollBody(emoji)?.scrollTop ?? 0);\n}\n\nexport function closestScrollBody(element: NullableElement): NullableElement {\n  if (!element) {\n    return null;\n  }\n\n  return element.closest(asSelectors(ClassNames.scrollBody)) ?? null;\n}\n\nexport function emojiTruOffsetLeft(element: NullableElement): number {\n  const button = buttonFromTarget(element);\n  const category = closestCategory(button);\n\n  return elementOffsetLeft(button) + elementOffsetLeft(category);\n}\n\nfunction elementOffsetTop(element: NullableElement): number {\n  return element?.offsetTop ?? 0;\n}\n\nfunction elementOffsetLeft(element: NullableElement): number {\n  return element?.offsetLeft ?? 0;\n}\n\nexport function unifiedFromEmojiElement(emoji: NullableElement): string | null {\n  return elementDataSetKey(buttonFromTarget(emoji), 'unified') ?? null;\n}\n\nexport function originalUnifiedFromEmojiElement(\n  emoji: NullableElement\n): string | null {\n  const unified = unifiedFromEmojiElement(emoji);\n\n  if (unified) {\n    return unifiedWithoutSkinTone(unified);\n  }\n  return null;\n}\n\nfunction elementDataSetKey(\n  element: NullableElement,\n  key: string\n): string | null {\n  return elementDataSet(element)[key] ?? null;\n}\n\nfunction elementDataSet(element: NullableElement): DOMStringMap {\n  return element?.dataset ?? {};\n}\n\nexport function isVisibleEmoji(element: HTMLElement) {\n  return element.classList.contains(ClassNames.visible);\n}\n\nexport function isHidden(element: NullableElement) {\n  if (!element) return true;\n\n  return element.classList.contains(ClassNames.hidden);\n}\n\nexport function allVisibleEmojis(parent: NullableElement) {\n  if (!parent) {\n    return [];\n  }\n\n  return Array.from(\n    parent.querySelectorAll(VisibleEmojiSelector)\n  ) as HTMLElement[];\n}\n\nexport function lastVisibleEmoji(element: NullableElement): NullableElement {\n  if (!element) return null;\n\n  const allEmojis = allVisibleEmojis(element);\n  const [last] = allEmojis.slice(-1);\n  if (!last) {\n    return null;\n  }\n\n  if (!isVisibleEmoji(last)) {\n    return prevVisibleEmoji(last);\n  }\n\n  return last;\n}\n\nexport function nextVisibleEmoji(element: HTMLElement): NullableElement {\n  const next = element.nextElementSibling as HTMLElement;\n\n  if (!next) {\n    return firstVisibleEmoji(nextCategory(element));\n  }\n\n  if (!isVisibleEmoji(next)) {\n    return nextVisibleEmoji(next);\n  }\n\n  return next;\n}\n\nexport function prevVisibleEmoji(element: HTMLElement): NullableElement {\n  const prev = element.previousElementSibling as HTMLElement;\n\n  if (!prev) {\n    return lastVisibleEmoji(prevCategory(element));\n  }\n\n  if (!isVisibleEmoji(prev)) {\n    return prevVisibleEmoji(prev);\n  }\n\n  return prev;\n}\n\nexport function firstVisibleEmoji(parent: NullableElement) {\n  if (!parent) {\n    return null;\n  }\n\n  const allEmojis = allVisibleEmojis(parent);\n\n  return firstVisibleElementInContainer(parent, allEmojis);\n}\n\nexport function prevCategory(element: NullableElement): NullableElement {\n  const category = closestCategory(element);\n\n  if (!category) {\n    return null;\n  }\n\n  const prev = category.previousElementSibling as HTMLElement;\n\n  if (!prev) {\n    return null;\n  }\n\n  if (isHidden(prev)) {\n    return prevCategory(prev);\n  }\n\n  return prev;\n}\n\nexport function nextCategory(element: NullableElement): NullableElement {\n  const category = closestCategory(element);\n\n  if (!category) {\n    return null;\n  }\n\n  const next = category.nextElementSibling as HTMLElement;\n\n  if (!next) {\n    return null;\n  }\n\n  if (isHidden(next)) {\n    return nextCategory(next);\n  }\n\n  return next;\n}\n\nexport function closestCategory(element: NullableElement) {\n  if (!element) {\n    return null;\n  }\n  return element.closest(asSelectors(ClassNames.category)) as HTMLElement;\n}\n\nexport function closestCategoryContent(element: NullableElement) {\n  if (!element) {\n    return null;\n  }\n  return element.closest(\n    asSelectors(ClassNames.categoryContent)\n  ) as HTMLElement;\n}\n","export function parseNativeEmoji(unified: string): string {\n  return unified\n    .split('-')\n    .map(hex => String.fromCodePoint(parseInt(hex, 16)))\n    .join('');\n}\n","import { SkinTones, SuggestionMode } from '../types/exposedTypes';\n\nimport { DataEmoji } from './DataTypes';\nimport { emojiUnified } from './emojiSelectors';\n\nconst SUGGESTED_LS_KEY = 'epr_suggested';\n\ntype SuggestedItem = {\n  unified: string;\n  original: string;\n  count: number;\n};\n\ntype Suggested = SuggestedItem[];\n\nexport function getSuggested(mode?: SuggestionMode): Suggested {\n  try {\n    if (!window?.localStorage) {\n      return [];\n    }\n    const recent = JSON.parse(\n      window?.localStorage.getItem(SUGGESTED_LS_KEY) ?? '[]'\n    ) as Suggested;\n\n    if (mode === SuggestionMode.FREQUENT) {\n      return recent.sort((a, b) => b.count - a.count);\n    }\n\n    return recent;\n  } catch {\n    return [];\n  }\n}\n\nexport function setSuggested(emoji: DataEmoji, skinTone: SkinTones) {\n  const recent = getSuggested();\n\n  const unified = emojiUnified(emoji, skinTone);\n  const originalUnified = emojiUnified(emoji);\n\n  let existing = recent.find(({ unified: u }) => u === unified);\n\n  let nextList: SuggestedItem[];\n\n  if (existing) {\n    nextList = [existing].concat(recent.filter(i => i !== existing));\n  } else {\n    existing = {\n      unified,\n      original: originalUnified,\n      count: 0\n    };\n    nextList = [existing, ...recent];\n  }\n\n  existing.count++;\n\n  nextList.length = Math.min(nextList.length, 14);\n\n  try {\n    window?.localStorage.setItem(SUGGESTED_LS_KEY, JSON.stringify(nextList));\n    // Prevents the change from being seen immediately.\n  } catch {\n    // ignore\n  }\n}\n","import {\n  Categories,\n  CategoryConfig,\n  CustomCategoryConfig\n} from '../config/categoryConfig';\nimport { CustomEmoji } from '../config/customEmojiConfig';\nimport { DataEmoji } from '../dataUtils/DataTypes';\n\nexport function isCustomCategory(\n  category: CategoryConfig | CustomCategoryConfig\n): category is CustomCategoryConfig {\n  return category.category === Categories.CUSTOM;\n}\n\nexport function isCustomEmoji(emoji: Partial<DataEmoji>): emoji is CustomEmoji {\n  return emoji.imgUrl !== undefined;\n}\n","import { useCallback } from 'react';\n\nimport {\n  useEmojiVariationPickerState,\n  useSkinToneFanOpenState\n} from '../components/context/PickerContext';\n\nexport function useCloseAllOpenToggles() {\n  const [variationPicker, setVariationPicker] = useEmojiVariationPickerState();\n  const [skinToneFanOpen, setSkinToneFanOpen] = useSkinToneFanOpenState();\n\n  const closeAllOpenToggles = useCallback(() => {\n    if (variationPicker) {\n      setVariationPicker(null);\n    }\n\n    if (skinToneFanOpen) {\n      setSkinToneFanOpen(false);\n    }\n  }, [\n    variationPicker,\n    skinToneFanOpen,\n    setVariationPicker,\n    setSkinToneFanOpen\n  ]);\n\n  return closeAllOpenToggles;\n}\n\nexport function useHasOpenToggles() {\n  const [variationPicker] = useEmojiVariationPickerState();\n  const [skinToneFanOpen] = useSkinToneFanOpenState();\n\n  return function hasOpenToggles() {\n    return !!variationPicker || skinToneFanOpen;\n  };\n}\n","import { emojiFromElement, NullableElement } from '../DomUtils/selectors';\nimport { useSetAnchoredEmojiRef } from '../components/context/ElementRefContext';\nimport { useEmojiVariationPickerState } from '../components/context/PickerContext';\n\nexport default function useSetVariationPicker() {\n  const setAnchoredEmojiRef = useSetAnchoredEmojiRef();\n  const [, setEmojiVariationPicker] = useEmojiVariationPickerState();\n\n  return function setVariationPicker(element: NullableElement) {\n    const [emoji] = emojiFromElement(element);\n\n    if (emoji) {\n      setAnchoredEmojiRef(element);\n      setEmojiVariationPicker(emoji);\n    }\n  };\n}\n","import * as React from 'react';\nimport { useEffect, useRef } from 'react';\n\nimport {\n  emojiFromElement,\n  isEmojiElement,\n  NullableElement\n} from '../DomUtils/selectors';\nimport {\n  useActiveSkinToneState,\n  useDisallowClickRef,\n  useEmojiVariationPickerState,\n  useUpdateSuggested\n} from '../components/context/PickerContext';\nimport { GetEmojiUrl } from '../components/emoji/BaseEmojiProps';\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  useOnEmojiClickConfig\n} from '../config/useConfig';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport {\n  activeVariationFromUnified,\n  emojiHasVariations,\n  emojiNames,\n  emojiUnified\n} from '../dataUtils/emojiSelectors';\nimport { parseNativeEmoji } from '../dataUtils/parseNativeEmoji';\nimport { setSuggested } from '../dataUtils/suggested';\nimport { isCustomEmoji } from '../typeRefinements/typeRefinements';\nimport { EmojiClickData, SkinTones, EmojiStyle } from '../types/exposedTypes';\n\nimport { useCloseAllOpenToggles } from './useCloseAllOpenToggles';\nimport useSetVariationPicker from './useSetVariationPicker';\n\nexport function useMouseDownHandlers(\n  BodyRef: React.MutableRefObject<NullableElement>\n) {\n  const mouseDownTimerRef = useRef<undefined | number>();\n  const setVariationPicker = useSetVariationPicker();\n  const disallowClickRef = useDisallowClickRef();\n  const [, setEmojiVariationPicker] = useEmojiVariationPickerState();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n  const [activeSkinTone] = useActiveSkinToneState();\n  const onEmojiClick = useOnEmojiClickConfig();\n  const [, updateSuggested] = useUpdateSuggested();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n  const activeEmojiStyle = useEmojiStyleConfig();\n\n  const onClick = React.useCallback(\n    function onClick(event: MouseEvent) {\n      if (disallowClickRef.current) {\n        return;\n      }\n\n      closeAllOpenToggles();\n\n      const [emoji, unified] = emojiFromEvent(event);\n\n      if (!emoji || !unified) {\n        return;\n      }\n\n      const skinToneToUse =\n        activeVariationFromUnified(unified) || activeSkinTone;\n\n      updateSuggested();\n      setSuggested(emoji, skinToneToUse);\n      onEmojiClick(\n        emojiClickOutput(emoji, skinToneToUse, activeEmojiStyle, getEmojiUrl),\n        event\n      );\n    },\n    [\n      activeSkinTone,\n      closeAllOpenToggles,\n      disallowClickRef,\n      onEmojiClick,\n      updateSuggested,\n      getEmojiUrl,\n      activeEmojiStyle\n    ]\n  );\n\n  const onMouseDown = React.useCallback(\n    function onMouseDown(event: MouseEvent) {\n      if (mouseDownTimerRef.current) {\n        clearTimeout(mouseDownTimerRef.current);\n      }\n\n      const [emoji] = emojiFromEvent(event);\n\n      if (!emoji || !emojiHasVariations(emoji)) {\n        return;\n      }\n\n      mouseDownTimerRef.current = window?.setTimeout(() => {\n        disallowClickRef.current = true;\n        mouseDownTimerRef.current = undefined;\n        closeAllOpenToggles();\n        setVariationPicker(event.target as HTMLElement);\n        setEmojiVariationPicker(emoji);\n      }, 500);\n    },\n    [\n      disallowClickRef,\n      closeAllOpenToggles,\n      setVariationPicker,\n      setEmojiVariationPicker\n    ]\n  );\n  const onMouseUp = React.useCallback(\n    function onMouseUp() {\n      if (mouseDownTimerRef.current) {\n        clearTimeout(mouseDownTimerRef.current);\n        mouseDownTimerRef.current = undefined;\n      } else if (disallowClickRef.current) {\n        // The problem we're trying to overcome here\n        // is that the emoji has both mouseup and click events\n        // and when releasing a mouseup event\n        // the click gets triggered too\n        // So we're disallowing the click event for a short time\n\n        requestAnimationFrame(() => {\n          disallowClickRef.current = false;\n        });\n      }\n    },\n    [disallowClickRef]\n  );\n\n  useEffect(() => {\n    if (!BodyRef.current) {\n      return;\n    }\n    const bodyRef = BodyRef.current;\n    bodyRef.addEventListener('click', onClick, {\n      passive: true\n    });\n\n    bodyRef.addEventListener('mousedown', onMouseDown, {\n      passive: true\n    });\n    bodyRef.addEventListener('mouseup', onMouseUp, {\n      passive: true\n    });\n\n    return () => {\n      bodyRef?.removeEventListener('click', onClick);\n      bodyRef?.removeEventListener('mousedown', onMouseDown);\n      bodyRef?.removeEventListener('mouseup', onMouseUp);\n    };\n  }, [BodyRef, onClick, onMouseDown, onMouseUp]);\n}\n\nfunction emojiFromEvent(event: MouseEvent): [DataEmoji, string] | [] {\n  const target = event?.target as HTMLElement;\n  if (!isEmojiElement(target)) {\n    return [];\n  }\n\n  return emojiFromElement(target);\n}\n\nfunction emojiClickOutput(\n  emoji: DataEmoji,\n  activeSkinTone: SkinTones,\n  activeEmojiStyle: EmojiStyle,\n  getEmojiUrl: GetEmojiUrl\n): EmojiClickData {\n  const names = emojiNames(emoji);\n\n  if (isCustomEmoji(emoji)) {\n    const unified = emojiUnified(emoji);\n    return {\n      activeSkinTone,\n      emoji: unified,\n      getImageUrl() {\n        return emoji.imgUrl;\n      },\n      imageUrl: emoji.imgUrl,\n      isCustom: true,\n      names,\n      unified,\n      unifiedWithoutSkinTone: unified\n    };\n  }\n  const unified = emojiUnified(emoji, activeSkinTone);\n\n  return {\n    activeSkinTone,\n    emoji: parseNativeEmoji(unified),\n    getImageUrl(emojiStyle: EmojiStyle = activeEmojiStyle ?? EmojiStyle.APPLE) {\n      return getEmojiUrl(unified, emojiStyle);\n    },\n    imageUrl: getEmojiUrl(unified, activeEmojiStyle ?? EmojiStyle.APPLE),\n    isCustom: false,\n    names,\n    unified,\n    unifiedWithoutSkinTone: emojiUnified(emoji)\n  };\n}\n","import { useCallback } from 'react';\n\nimport { useBodyRef } from '../components/context/ElementRefContext';\n\nimport { asSelectors, ClassNames } from './classNames';\nimport {\n  categoryLabelHeight,\n  closestCategory,\n  closestScrollBody,\n  emojiDistanceFromScrollTop,\n  isEmojiBehindLabel,\n  NullableElement,\n  queryScrollBody\n} from './selectors';\n\nexport function scrollTo(root: NullableElement, top: number = 0) {\n  const $eprBody = queryScrollBody(root);\n\n  if (!$eprBody) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    $eprBody.scrollTop = top + 1;\n  });\n}\n\nexport function scrollBy(root: NullableElement, by: number): void {\n  const $eprBody = queryScrollBody(root);\n\n  if (!$eprBody) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    $eprBody.scrollTop = $eprBody.scrollTop + by;\n  });\n}\n\nexport function useScrollTo() {\n  const BodyRef = useBodyRef();\n\n  return useCallback(\n    (top: number) => {\n      requestAnimationFrame(() => {\n        if (BodyRef.current) {\n          BodyRef.current.scrollTop = top;\n        }\n      });\n    },\n    [BodyRef]\n  );\n}\n\nexport function scrollEmojiAboveLabel(emoji: NullableElement) {\n  if (!emoji || !isEmojiBehindLabel(emoji)) {\n    return;\n  }\n\n  if (emoji.closest(asSelectors(ClassNames.variationPicker))) {\n    return;\n  }\n\n  const scrollBody = closestScrollBody(emoji);\n  const by = emojiDistanceFromScrollTop(emoji);\n  scrollBy(scrollBody, -(categoryLabelHeight(closestCategory(emoji)) - by));\n}\n","import { useCallback } from 'react';\n\nimport { focusElement, focusFirstElementChild } from '../DomUtils/focusElement';\nimport {\n  useCategoryNavigationRef,\n  useSearchInputRef,\n  useSkinTonePickerRef\n} from '../components/context/ElementRefContext';\n\nexport function useFocusSearchInput() {\n  const SearchInputRef = useSearchInputRef();\n\n  return useCallback(() => {\n    focusElement(SearchInputRef.current);\n  }, [SearchInputRef]);\n}\n\nexport function useFocusSkinTonePicker() {\n  const SkinTonePickerRef = useSkinTonePickerRef();\n\n  return useCallback(() => {\n    if (!SkinTonePickerRef.current) {\n      return;\n    }\n\n    focusFirstElementChild(SkinTonePickerRef.current);\n  }, [SkinTonePickerRef]);\n}\n\nexport function useFocusCategoryNavigation() {\n  const CategoryNavigationRef = useCategoryNavigationRef();\n\n  return useCallback(() => {\n    if (!CategoryNavigationRef.current) {\n      return;\n    }\n\n    focusFirstElementChild(CategoryNavigationRef.current);\n  }, [CategoryNavigationRef]);\n}\n","import { scrollTo } from '../DomUtils/scrollTo';\nimport {\n  usePickerMainRef,\n  useSearchInputRef,\n} from '../components/context/ElementRefContext';\nimport {\n  FilterState,\n  useFilterRef,\n  useSearchTermState,\n} from '../components/context/PickerContext';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport { emojiNames } from '../dataUtils/emojiSelectors';\n\nimport { useFocusSearchInput } from './useFocus';\n\nfunction useSetFilterRef() {\n  const filterRef = useFilterRef();\n\n  return function setFilter(\n    setter: FilterState | ((current: FilterState) => FilterState)\n  ): void {\n    if (typeof setter === 'function') {\n      return setFilter(setter(filterRef.current));\n    }\n\n    filterRef.current = setter;\n  };\n}\n\nexport function useClearSearch() {\n  const applySearch = useApplySearch();\n  const SearchInputRef = useSearchInputRef();\n  const focusSearchInput = useFocusSearchInput();\n\n  return function clearSearch() {\n    if (SearchInputRef.current) {\n      SearchInputRef.current.value = '';\n    }\n\n    applySearch('');\n    focusSearchInput();\n  };\n}\n\nexport function useAppendSearch() {\n  const SearchInputRef = useSearchInputRef();\n  const applySearch = useApplySearch();\n\n  return function appendSearch(str: string) {\n    if (SearchInputRef.current) {\n      SearchInputRef.current.value = `${SearchInputRef.current.value}${str}`;\n      applySearch(getNormalizedSearchTerm(SearchInputRef.current.value));\n    } else {\n      applySearch(getNormalizedSearchTerm(str));\n    }\n  };\n}\n\nexport function useFilter() {\n  const SearchInputRef = useSearchInputRef();\n  const filterRef = useFilterRef();\n  const setFilterRef = useSetFilterRef();\n  const applySearch = useApplySearch();\n\n  const [searchTerm] = useSearchTermState();\n\n  return {\n    onChange,\n    searchTerm,\n    SearchInputRef,\n  };\n\n  function onChange(inputValue: string) {\n    const filter = filterRef.current;\n\n    const nextValue = inputValue.toLowerCase();\n\n    if (filter?.[nextValue] || nextValue.length <= 1) {\n      return applySearch(nextValue);\n    }\n\n    const longestMatch = findLongestMatch(nextValue, filter);\n\n    if (!longestMatch) {\n      // Can we even get here?\n      // If so, we need to search among all emojis\n      return applySearch(nextValue);\n    }\n\n    setFilterRef((current) =>\n      Object.assign(current, {\n        [nextValue]: filterEmojiObjectByKeyword(longestMatch, nextValue),\n      })\n    );\n    applySearch(nextValue);\n  }\n}\n\nfunction useApplySearch() {\n  const [, setSearchTerm] = useSearchTermState();\n  const PickerMainRef = usePickerMainRef();\n\n  return function applySearch(searchTerm: string) {\n    requestAnimationFrame(() => {\n      setSearchTerm(searchTerm ? searchTerm?.toLowerCase() : searchTerm).then(\n        () => {\n          scrollTo(PickerMainRef.current, 0);\n        }\n      );\n    });\n  };\n}\n\nfunction filterEmojiObjectByKeyword(\n  emojis: FilterDict,\n  keyword: string\n): FilterDict {\n  const filtered: FilterDict = {};\n\n  for (const unified in emojis) {\n    const emoji = emojis[unified];\n\n    if (hasMatch(emoji, keyword)) {\n      filtered[unified] = emoji;\n    }\n  }\n\n  return filtered;\n}\n\nfunction hasMatch(emoji: DataEmoji, keyword: string): boolean {\n  return emojiNames(emoji).some((name) => name.includes(keyword));\n}\n\nexport function useIsEmojiFiltered(): (unified: string) => boolean {\n  const { current: filter } = useFilterRef();\n  const [searchTerm] = useSearchTermState();\n\n  return (unified) => isEmojiFilteredBySearchTerm(unified, filter, searchTerm);\n}\n\nfunction isEmojiFilteredBySearchTerm(\n  unified: string,\n  filter: FilterState,\n  searchTerm: string\n): boolean {\n  if (!filter || !searchTerm) {\n    return false;\n  }\n\n  return !filter[searchTerm]?.[unified];\n}\n\nexport type FilterDict = Record<string, DataEmoji>;\n\nfunction findLongestMatch(\n  keyword: string,\n  dict: Record<string, FilterDict> | null\n): FilterDict | null {\n  if (!dict) {\n    return null;\n  }\n\n  if (dict[keyword]) {\n    return dict[keyword];\n  }\n\n  const longestMatchingKey = Object.keys(dict)\n    .sort((a, b) => b.length - a.length)\n    .find((key) => keyword.includes(key));\n\n  if (longestMatchingKey) {\n    return dict[longestMatchingKey];\n  }\n\n  return null;\n}\n\nexport function getNormalizedSearchTerm(str: string): string {\n  if (!str || typeof str !== 'string') {\n    return '';\n  }\n\n  return str.trim().toLowerCase();\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import clsx from 'clsx';\nimport * as React from 'react';\n\ninterface Props\n  extends React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  > {\n  className?: string;\n}\n\nexport function Button(props: Props) {\n  return (\n    <button\n      type=\"button\"\n      {...props}\n      className={clsx('epr-btn', props.className)}\n    >\n      {props.children}\n    </button>\n  );\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { Button } from '../atoms/Button';\nimport './Emoji.css';\n\ntype ClickableEmojiButtonProps = Readonly<{\n  hidden?: boolean;\n  showVariations?: boolean;\n  hiddenOnSearch?: boolean;\n  emojiNames: string[];\n  children: React.ReactNode;\n  hasVariations: boolean;\n  unified?: string;\n}>;\n\nexport function ClickableEmojiButton({\n  emojiNames,\n  unified,\n  hidden,\n  hiddenOnSearch,\n  showVariations = true,\n  hasVariations,\n  children\n}: ClickableEmojiButtonProps) {\n  return (\n    <Button\n      className={clsx(ClassNames.emoji, {\n        [ClassNames.hidden]: hidden,\n        [ClassNames.hiddenOnSearch]: hiddenOnSearch,\n        [ClassNames.visible]: !hidden && !hiddenOnSearch,\n        [ClassNames.emojiHasVariations]: hasVariations && showVariations\n      })}\n      data-unified={unified}\n      aria-label={emojiNames[0]}\n      data-full-name={emojiNames}\n    >\n      {children}\n    </Button>\n  );\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { EmojiStyle } from '../../types/exposedTypes';\n\nexport function EmojiImg({\n  emojiName,\n  style,\n  lazyLoad = false,\n  imgUrl,\n  onError\n}: {\n  emojiName: string;\n  emojiStyle: EmojiStyle;\n  style: React.CSSProperties;\n  lazyLoad?: boolean;\n  imgUrl: string;\n  onError: () => void;\n}) {\n  return (\n    <img\n      src={imgUrl}\n      alt={emojiName}\n      className={clsx(ClassNames.external, 'epr-emoji-img')}\n      loading={lazyLoad ? 'lazy' : 'eager'}\n      onError={onError}\n      style={style}\n    />\n  );\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { parseNativeEmoji } from '../../dataUtils/parseNativeEmoji';\n\nexport function NativeEmoji({\n  unified,\n  style\n}: {\n  unified: string;\n  style: React.CSSProperties;\n}) {\n  return (\n    <span\n      className={clsx(ClassNames.external, 'epr-emoji-native')}\n      data-unified={unified}\n      style={style}\n    >\n      {parseNativeEmoji(unified)}\n    </span>\n  );\n}\n","import * as React from 'react';\n\nimport {\n  emojiByUnified,\n  emojiName,\n  emojiUrlByUnified\n} from '../../dataUtils/emojiSelectors';\nimport { isCustomEmoji } from '../../typeRefinements/typeRefinements';\nimport { EmojiStyle } from '../../types/exposedTypes';\nimport { useEmojisThatFailedToLoadState } from '../context/PickerContext';\n\nimport { BaseEmojiProps } from './BaseEmojiProps';\nimport { EmojiImg } from './EmojiImg';\nimport { NativeEmoji } from './NativeEmoji';\n\nexport function ViewOnlyEmoji({\n  emoji,\n  unified,\n  emojiStyle,\n  size,\n  lazyLoad,\n  getEmojiUrl = emojiUrlByUnified\n}: BaseEmojiProps) {\n  const [, setEmojisThatFailedToLoad] = useEmojisThatFailedToLoadState();\n\n  const style = {} as React.CSSProperties;\n  if (size) {\n    style.width = style.height = style.fontSize = `${size}px`;\n  }\n\n  const emojiToRender = emoji ? emoji : emojiByUnified(unified);\n\n  if (!emojiToRender) {\n    return null;\n  }\n\n  if (isCustomEmoji(emojiToRender)) {\n    return (\n      <EmojiImg\n        style={style}\n        emojiName={unified}\n        emojiStyle={EmojiStyle.NATIVE}\n        lazyLoad={lazyLoad}\n        imgUrl={emojiToRender.imgUrl}\n        onError={onError}\n      />\n    );\n  }\n\n  return (\n    <>\n      {emojiStyle === EmojiStyle.NATIVE ? (\n        <NativeEmoji unified={unified} style={style} />\n      ) : (\n        <EmojiImg\n          style={style}\n          emojiName={emojiName(emojiToRender)}\n          emojiStyle={emojiStyle}\n          lazyLoad={lazyLoad}\n          imgUrl={getEmojiUrl(unified, emojiStyle)}\n          onError={onError}\n        />\n      )}\n    </>\n  );\n\n  function onError() {\n    setEmojisThatFailedToLoad(prev => new Set(prev).add(unified));\n  }\n}\n","import * as React from 'react';\n\nimport { DataEmoji } from '../../dataUtils/DataTypes';\nimport { emojiHasVariations, emojiNames } from '../../dataUtils/emojiSelectors';\n\nimport './Emoji.css';\nimport { BaseEmojiProps } from './BaseEmojiProps';\nimport { ClickableEmojiButton } from './ClickableEmojiButton';\nimport { ViewOnlyEmoji } from './ViewOnlyEmoji';\n\ntype ClickableEmojiProps = Readonly<\n  BaseEmojiProps & {\n    hidden?: boolean;\n    showVariations?: boolean;\n    hiddenOnSearch?: boolean;\n    emoji: DataEmoji;\n  }\n>;\n\nexport function ClickableEmoji({\n  emoji,\n  unified,\n  hidden,\n  hiddenOnSearch,\n  emojiStyle,\n  showVariations = true,\n  size,\n  lazyLoad,\n  getEmojiUrl\n}: ClickableEmojiProps) {\n  const hasVariations = emojiHasVariations(emoji);\n\n  return (\n    <ClickableEmojiButton\n      hasVariations={hasVariations}\n      showVariations={showVariations}\n      hidden={hidden}\n      hiddenOnSearch={hiddenOnSearch}\n      emojiNames={emojiNames(emoji)}\n      unified={unified}\n    >\n      <ViewOnlyEmoji\n        unified={unified}\n        emoji={emoji}\n        size={size}\n        emojiStyle={emojiStyle}\n        lazyLoad={lazyLoad}\n        getEmojiUrl={getEmojiUrl}\n      />\n    </ClickableEmojiButton>\n  );\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport {\n  CategoryConfig,\n  categoryFromCategoryConfig,\n  categoryNameFromCategoryConfig\n} from '../../config/categoryConfig';\nimport './EmojiCategory.css';\n\ntype Props = Readonly<{\n  categoryConfig: CategoryConfig;\n  children?: React.ReactNode;\n  hidden?: boolean;\n  hiddenOnSearch?: boolean;\n}>;\n\nexport function EmojiCategory({\n  categoryConfig,\n  children,\n  hidden,\n  hiddenOnSearch\n}: Props) {\n  const category = categoryFromCategoryConfig(categoryConfig);\n  const categoryName = categoryNameFromCategoryConfig(categoryConfig);\n\n  return (\n    <li\n      className={clsx(ClassNames.category, {\n        [ClassNames.hidden]: hidden,\n        [ClassNames.hiddenOnSearch]: hiddenOnSearch\n      })}\n      data-name={category}\n      aria-label={categoryName}\n    >\n      <div className={ClassNames.label}>{categoryName}</div>\n      <div className={ClassNames.categoryContent}>{children}</div>\n    </li>\n  );\n}\n","import * as React from 'react';\n\nimport { CategoryConfig } from '../../config/categoryConfig';\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  useSuggestedEmojisModeConfig,\n} from '../../config/useConfig';\nimport { emojiByUnified } from '../../dataUtils/emojiSelectors';\nimport { getSuggested } from '../../dataUtils/suggested';\nimport { useUpdateSuggested } from '../context/PickerContext';\nimport { ClickableEmoji } from '../emoji/Emoji';\n\nimport { EmojiCategory } from './EmojiCategory';\n\ntype Props = Readonly<{\n  categoryConfig: CategoryConfig;\n}>;\n\nexport function Suggested({ categoryConfig }: Props) {\n  const [suggestedUpdated] = useUpdateSuggested();\n  const suggestedEmojisModeConfig = useSuggestedEmojisModeConfig();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n  const suggested = React.useMemo(\n    () => getSuggested(suggestedEmojisModeConfig) ?? [],\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [suggestedUpdated, suggestedEmojisModeConfig]\n  );\n  const emojiStyle = useEmojiStyleConfig();\n\n  return (\n    <EmojiCategory\n      categoryConfig={categoryConfig}\n      hiddenOnSearch\n      hidden={suggested.length === 0}\n    >\n      {suggested.map((suggestedItem) => {\n        const emoji = emojiByUnified(suggestedItem.original);\n\n        if (!emoji) {\n          return null;\n        }\n\n        return (\n          <ClickableEmoji\n            showVariations={false}\n            unified={suggestedItem.unified}\n            emojiStyle={emojiStyle}\n            emoji={emoji}\n            key={suggestedItem.unified}\n            getEmojiUrl={getEmojiUrl}\n          />\n        );\n      })}\n    </EmojiCategory>\n  );\n}\n","import * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport {\n  Categories,\n  CategoryConfig,\n  categoryFromCategoryConfig\n} from '../../config/categoryConfig';\nimport {\n  useCategoriesConfig,\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  useLazyLoadEmojisConfig,\n  useSkinTonesDisabledConfig\n} from '../../config/useConfig';\nimport { emojisByCategory, emojiUnified } from '../../dataUtils/emojiSelectors';\nimport { useIsEmojiDisallowed } from '../../hooks/useDisallowedEmojis';\nimport { useIsEmojiHidden } from '../../hooks/useIsEmojiHidden';\nimport {\n  useActiveSkinToneState,\n  useIsPastInitialLoad\n} from '../context/PickerContext';\nimport { ClickableEmoji } from '../emoji/Emoji';\n\nimport { EmojiCategory } from './EmojiCategory';\nimport { Suggested } from './Suggested';\n\nimport './EmojiList.css';\n\nexport function EmojiList() {\n  const categories = useCategoriesConfig();\n\n  return (\n    <ul className={ClassNames.emojiList}>\n      {categories.map((categoryConfig, index) => {\n        const category = categoryFromCategoryConfig(categoryConfig);\n\n        if (category === Categories.SUGGESTED) {\n          return <Suggested key={category} categoryConfig={categoryConfig} />;\n        }\n\n        return (\n          <RenderCategory\n            key={category}\n            index={index}\n            category={category}\n            categoryConfig={categoryConfig}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction RenderCategory({\n  index,\n  category,\n  categoryConfig\n}: {\n  index: number;\n  category: Categories;\n  categoryConfig: CategoryConfig;\n}) {\n  const isEmojiHidden = useIsEmojiHidden();\n  const lazyLoadEmojis = useLazyLoadEmojisConfig();\n  const emojiStyle = useEmojiStyleConfig();\n  const isPastInitialLoad = useIsPastInitialLoad();\n  const [activeSkinTone] = useActiveSkinToneState();\n  const isEmojiDisallowed = useIsEmojiDisallowed();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n  const showVariations = !useSkinTonesDisabledConfig();\n\n  // Small trick to defer the rendering of all emoji categories until the first category is visible\n  // This way the user gets to actually see something and not wait for the whole picker to render.\n  const emojisToPush =\n    !isPastInitialLoad && index > 1 ? [] : emojisByCategory(category);\n\n  let hiddenCounter = 0;\n\n  const emojis = emojisToPush.map(emoji => {\n    const unified = emojiUnified(emoji, activeSkinTone);\n    const { failedToLoad, filteredOut, hidden } = isEmojiHidden(emoji);\n\n    const isDisallowed = isEmojiDisallowed(emoji);\n\n    if (hidden || isDisallowed) {\n      hiddenCounter++;\n    }\n\n    if (isDisallowed) {\n      return null;\n    }\n\n    return (\n      <ClickableEmoji\n        showVariations={showVariations}\n        key={unified}\n        emoji={emoji}\n        unified={unified}\n        hidden={failedToLoad}\n        hiddenOnSearch={filteredOut}\n        emojiStyle={emojiStyle}\n        lazyLoad={lazyLoadEmojis}\n        getEmojiUrl={getEmojiUrl}\n      />\n    );\n  });\n\n  return (\n    <EmojiCategory\n      categoryConfig={categoryConfig}\n      // Indicates that there are no visible emojis\n      // Hence, the category should be hidden\n      hidden={hiddenCounter === emojis.length}\n    >\n      {emojis}\n    </EmojiCategory>\n  );\n}\n","import { useUnicodeToHide } from \"../config/useConfig\";\n\nexport function useIsUnicodeHidden() {\n    const unicodeToHide = useUnicodeToHide();\n    return (emojiUnified: string) => unicodeToHide.has(emojiUnified);\n  }\n","import { useEmojisThatFailedToLoadState } from '../components/context/PickerContext';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport { emojiUnified } from '../dataUtils/emojiSelectors';\n\nimport { useIsEmojiFiltered } from './useFilter';\n\nexport function useIsEmojiHidden(): (emoji: DataEmoji) => IsHiddenReturn {\n  const [emojisThatFailedToLoad] = useEmojisThatFailedToLoadState();\n  const isEmojiFiltered = useIsEmojiFiltered();\n\n  return (emoji: DataEmoji): IsHiddenReturn => {\n    const unified = emojiUnified(emoji);\n\n    const failedToLoad = emojisThatFailedToLoad.has(unified);\n    const filteredOut = isEmojiFiltered(unified);\n\n    return {\n      failedToLoad,\n      filteredOut,\n      hidden: failedToLoad || filteredOut\n    };\n  };\n}\n\ntype IsHiddenReturn = {\n  failedToLoad: boolean;\n  filteredOut: boolean;\n  hidden: boolean;\n};\n","import {\n  elementCountInRow,\n  elementIndexInRow,\n  getElementInNextRow,\n  getElementInPrevRow,\n  getElementInRow,\n  hasNextRow,\n  rowNumber\n} from './elementPositionInRow';\nimport { focusElement } from './focusElement';\nimport { scrollEmojiAboveLabel } from './scrollTo';\nimport {\n  allVisibleEmojis,\n  closestCategory,\n  firstVisibleEmoji,\n  lastVisibleEmoji,\n  nextCategory,\n  nextVisibleEmoji,\n  NullableElement,\n  prevCategory,\n  prevVisibleEmoji,\n  closestCategoryContent\n} from './selectors';\n\nexport function focusFirstVisibleEmoji(parent: NullableElement) {\n  const emoji = firstVisibleEmoji(parent);\n  focusElement(emoji);\n  scrollEmojiAboveLabel(emoji);\n}\n\nexport function focusAndClickFirstVisibleEmoji(parent: NullableElement) {\n  const firstEmoji = firstVisibleEmoji(parent);\n\n  focusElement(firstEmoji);\n  firstEmoji?.click();\n}\n\nexport function focusLastVisibleEmoji(parent: NullableElement) {\n  focusElement(lastVisibleEmoji(parent));\n}\n\nexport function focusNextVisibleEmoji(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  const next = nextVisibleEmoji(element);\n\n  if (!next) {\n    return focusFirstVisibleEmoji(nextCategory(element));\n  }\n\n  focusElement(next);\n  scrollEmojiAboveLabel(next);\n}\n\nexport function focusPrevVisibleEmoji(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  const prev = prevVisibleEmoji(element);\n\n  if (!prev) {\n    return focusLastVisibleEmoji(prevCategory(element));\n  }\n\n  focusElement(prev);\n  scrollEmojiAboveLabel(prev);\n}\n\nexport function focusVisibleEmojiOneRowUp(\n  element: NullableElement,\n  exitUp: () => void\n) {\n  if (!element) {\n    return;\n  }\n\n  const prev = visibleEmojiOneRowUp(element);\n\n  if (!prev) {\n    return exitUp();\n  }\n\n  focusElement(prev);\n  scrollEmojiAboveLabel(prev);\n}\n\nexport function focusVisibleEmojiOneRowDown(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  const next = visibleEmojiOneRowDown(element);\n\n  return focusElement(next);\n}\n\nfunction visibleEmojiOneRowUp(element: HTMLElement) {\n  if (!element) {\n    return null;\n  }\n\n  const categoryContent = closestCategoryContent(element);\n  const category = closestCategory(categoryContent);\n  const indexInRow = elementIndexInRow(categoryContent, element);\n  const row = rowNumber(categoryContent, element);\n  const countInRow = elementCountInRow(categoryContent, element);\n\n  if (row === 0) {\n    const prevVisibleCategory = prevCategory(category);\n\n    if (!prevVisibleCategory) {\n      return null;\n    }\n\n    return getElementInRow(\n      allVisibleEmojis(prevVisibleCategory),\n      -1, // last row\n      countInRow,\n      indexInRow\n    );\n  }\n\n  return getElementInPrevRow(\n    allVisibleEmojis(categoryContent),\n    row,\n    countInRow,\n    indexInRow\n  );\n}\n\nfunction visibleEmojiOneRowDown(element: HTMLElement) {\n  if (!element) {\n    return null;\n  }\n\n  const categoryContent = closestCategoryContent(element);\n  const category = closestCategory(categoryContent);\n  const indexInRow = elementIndexInRow(categoryContent, element);\n  const row = rowNumber(categoryContent, element);\n  const countInRow = elementCountInRow(categoryContent, element);\n  if (!hasNextRow(categoryContent, element)) {\n    const nextVisibleCategory = nextCategory(category);\n\n    if (!nextVisibleCategory) {\n      return null;\n    }\n\n    return getElementInRow(\n      allVisibleEmojis(nextVisibleCategory),\n      0,\n      countInRow,\n      indexInRow\n    );\n  }\n\n  const itemInNextRow = getElementInNextRow(\n    allVisibleEmojis(categoryContent),\n    row,\n    countInRow,\n    indexInRow\n  );\n\n  return itemInNextRow;\n}\n","import * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { useOnMouseMove } from '../../hooks/useDisallowMouseMove';\nimport { useMouseDownHandlers } from '../../hooks/useMouseDownHandlers';\nimport { useOnScroll } from '../../hooks/useOnScroll';\nimport { useBodyRef } from '../context/ElementRefContext';\n\nimport { EmojiList } from './EmojiList';\nimport { EmojiVariationPicker } from './EmojiVariationPicker';\n\nimport './Body.css';\n\nexport function Body() {\n  const BodyRef = useBodyRef();\n  useOnScroll(BodyRef);\n  useMouseDownHandlers(BodyRef);\n  useOnMouseMove();\n\n  return (\n    <div className={ClassNames.scrollBody} ref={BodyRef}>\n      <EmojiVariationPicker />\n      <EmojiList />\n    </div>\n  );\n}\n","import { useEffect } from 'react';\n\nimport { ElementRef } from '../components/context/ElementRefContext';\n\nimport { useCloseAllOpenToggles } from './useCloseAllOpenToggles';\n\nexport function useOnScroll(BodyRef: ElementRef) {\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  useEffect(() => {\n    const bodyRef = BodyRef.current;\n    if (!bodyRef) {\n      return;\n    }\n\n    bodyRef.addEventListener('scroll', onScroll, {\n      passive: true\n    });\n\n    function onScroll() {\n      closeAllOpenToggles();\n    }\n\n    return () => {\n      bodyRef?.removeEventListener('scroll', onScroll);\n    };\n  }, [BodyRef, closeAllOpenToggles]);\n}\n","import { useSkinTonePickerLocationConfig } from '../config/useConfig';\nimport { SkinTonePickerLocation } from '../types/exposedTypes';\n\nexport function useShouldShowSkinTonePicker() {\n  const skinTonePickerLocationConfig = useSkinTonePickerLocationConfig();\n\n  return function shouldShowSkinTonePicker(location: SkinTonePickerLocation) {\n    return skinTonePickerLocationConfig === location;\n  };\n}\n\nexport function useIsSkinToneInSearch() {\n  const skinTonePickerLocationConfig = useSkinTonePickerLocationConfig();\n\n  return skinTonePickerLocationConfig === SkinTonePickerLocation.SEARCH;\n}\n\nexport function useIsSkinToneInPreview() {\n  const skinTonePickerLocationConfig = useSkinTonePickerLocationConfig();\n\n  return skinTonePickerLocationConfig === SkinTonePickerLocation.PREVIEW;\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\n\ntype Props = Readonly<{\n  className?: string;\n  style?: React.CSSProperties;\n}>;\n\nexport default function Space({ className, style = {} }: Props) {\n  return <div style={{ flex: 1, ...style }} className={clsx(className)} />;\n}\n","import * as React from 'react';\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n}>;\n\nexport default function Absolute({ children, className, style }: Props) {\n  return (\n    <div style={{ ...style, position: 'absolute' }} className={className}>\n      {children}\n    </div>\n  );\n}\n","import * as React from 'react';\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n}>;\n\nexport default function Relative({ children, className, style }: Props) {\n  return (\n    <div style={{ ...style, position: 'relative' }} className={className}>\n      {children}\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { useState } from 'react';\n\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  usePreviewConfig\n} from '../../config/useConfig';\nimport {\n  emojiByUnified,\n  emojiName,\n  emojiUnified\n} from '../../dataUtils/emojiSelectors';\nimport { useEmojiPreviewEvents } from '../../hooks/useEmojiPreviewEvents';\nimport { useIsSkinToneInPreview } from '../../hooks/useShouldShowSkinTonePicker';\nimport Flex from '../Layout/Flex';\nimport Space from '../Layout/Space';\nimport { useEmojiVariationPickerState } from '../context/PickerContext';\nimport './Preview.css';\nimport { SkinTonePickerMenu } from '../header/SkinTonePicker';\nimport { ViewOnlyEmoji } from '../emoji/ViewOnlyEmoji';\n\nexport function Preview() {\n  const previewConfig = usePreviewConfig();\n  const isSkinToneInPreview = useIsSkinToneInPreview();\n\n  if (!previewConfig.showPreview) {\n    return null;\n  }\n\n  return (\n    <Flex className=\"epr-preview\">\n      <PreviewBody />\n      <Space />\n      {isSkinToneInPreview ? <SkinTonePickerMenu /> : null}\n    </Flex>\n  );\n}\n\nexport function PreviewBody() {\n  const previewConfig = usePreviewConfig();\n  const [previewEmoji, setPreviewEmoji] = useState<PreviewEmoji>(null);\n  const emojiStyle = useEmojiStyleConfig();\n  const [variationPickerEmoji] = useEmojiVariationPickerState();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  useEmojiPreviewEvents(previewConfig.showPreview, setPreviewEmoji);\n\n  const emoji = emojiByUnified(previewEmoji?.originalUnified);\n\n  const show = emoji != null && previewEmoji != null;\n\n  return <PreviewContent />;\n\n  function PreviewContent() {\n    const defaultEmoji = variationPickerEmoji ?? emojiByUnified(previewConfig.defaultEmoji)\n    if (!defaultEmoji) {\n      return null\n    }\n    const defaultText = variationPickerEmoji\n      ? emojiName(variationPickerEmoji)\n      : previewConfig.defaultCaption;\n\n    return (\n      <>\n        <div>\n          {show ? (\n            <ViewOnlyEmoji\n              unified={previewEmoji?.unified as string}\n              emoji={emoji}\n              emojiStyle={emojiStyle}\n              size={45}\n              getEmojiUrl={getEmojiUrl}\n            />\n          ) : defaultEmoji ? (\n            <ViewOnlyEmoji\n              unified={emojiUnified(defaultEmoji)}\n              emoji={defaultEmoji}\n              emojiStyle={emojiStyle}\n              size={45}\n              getEmojiUrl={getEmojiUrl}\n            />\n          ) : null}\n        </div>\n        {show ? (\n          <div className=\"epr-preview-emoji-label\">\n            {emojiName(emoji)}\n          </div>\n        ) : (\n          <div className=\"epr-preview-emoji-label\">{defaultText}</div>\n        )}\n      </>\n    );\n  }\n}\n\nexport type PreviewEmoji = null | {\n  unified: string;\n  originalUnified: string;\n};\n","import * as React from 'react';\nimport { useEffect } from 'react';\n\nimport { focusElement } from '../DomUtils/focusElement';\nimport {\n  buttonFromTarget,\n  originalUnifiedFromEmojiElement,\n  unifiedFromEmojiElement\n} from '../DomUtils/selectors';\nimport { useBodyRef } from '../components/context/ElementRefContext';\nimport { PreviewEmoji } from '../components/footer/Preview';\n\nimport {\n  useAllowMouseMove,\n  useIsMouseDisallowed\n} from './useDisallowMouseMove';\n\nexport function useEmojiPreviewEvents(\n  allow: boolean,\n  setPreviewEmoji: React.Dispatch<React.SetStateAction<PreviewEmoji>>\n) {\n  const BodyRef = useBodyRef();\n  const isMouseDisallowed = useIsMouseDisallowed();\n  const allowMouseMove = useAllowMouseMove();\n\n  useEffect(() => {\n    if (!allow) {\n      return;\n    }\n    const bodyRef = BodyRef.current;\n\n    bodyRef?.addEventListener('keydown', onEscape, {\n      passive: true\n    });\n\n    bodyRef?.addEventListener('mouseover', onMouseOver, true);\n\n    bodyRef?.addEventListener('focus', onEnter, true);\n\n    bodyRef?.addEventListener('mouseout', onLeave, {\n      passive: true\n    });\n    bodyRef?.addEventListener('blur', onLeave, true);\n\n    function onEnter(e: FocusEvent) {\n      const button = buttonFromTarget(e.target as HTMLElement);\n\n      if (!button) {\n        return onLeave();\n      }\n\n      const unified = unifiedFromEmojiElement(button);\n      const originalUnified = originalUnifiedFromEmojiElement(button);\n\n      if (!unified || !originalUnified) {\n        return onLeave();\n      }\n\n      setPreviewEmoji({\n        unified,\n        originalUnified\n      });\n    }\n    function onLeave(e?: FocusEvent | MouseEvent) {\n      if (e) {\n        const relatedTarget = e.relatedTarget as HTMLElement;\n\n        if (!buttonFromTarget(relatedTarget)) {\n          return setPreviewEmoji(null);\n        }\n      }\n\n      setPreviewEmoji(null);\n    }\n    function onEscape(e: KeyboardEvent) {\n      if (e.key === 'Escape') {\n        setPreviewEmoji(null);\n      }\n    }\n\n    function onMouseOver(e: MouseEvent) {\n      if (isMouseDisallowed()) {\n        return;\n      }\n\n      const button = buttonFromTarget(e.target as HTMLElement);\n\n      if (button) {\n        focusElement(button);\n      }\n    }\n\n    return () => {\n      bodyRef?.removeEventListener('mouseover', onMouseOver);\n      bodyRef?.removeEventListener('mouseout', onLeave);\n      bodyRef?.removeEventListener('focus', onEnter, true);\n      bodyRef?.removeEventListener('blur', onLeave, true);\n      bodyRef?.removeEventListener('keydown', onEscape);\n    };\n  }, [BodyRef, allow, setPreviewEmoji, isMouseDisallowed, allowMouseMove]);\n}\n","import { useSearchTermState } from '../components/context/PickerContext';\n\nexport default function useIsSearchMode(): boolean {\n  const [searchTerm] = useSearchTermState();\n\n  return !!searchTerm;\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\nimport { useState } from 'react';\nimport './CategoryNavigation.css';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport {\n  categoryFromCategoryConfig,\n  categoryNameFromCategoryConfig\n} from '../../config/categoryConfig';\nimport { useCategoriesConfig } from '../../config/useConfig';\nimport { useActiveCategoryScrollDetection } from '../../hooks/useActiveCategoryScrollDetection';\nimport useIsSearchMode from '../../hooks/useIsSearchMode';\nimport { useScrollCategoryIntoView } from '../../hooks/useScrollCategoryIntoView';\nimport { useShouldHideCustomEmojis } from '../../hooks/useShouldHideCustomEmojis';\nimport { isCustomCategory } from '../../typeRefinements/typeRefinements';\nimport { Button } from '../atoms/Button';\nimport { useCategoryNavigationRef } from '../context/ElementRefContext';\n\nexport function CategoryNavigation() {\n  const [activeCategory, setActiveCategory] = useState<string | null>(null);\n  const scrollCategoryIntoView = useScrollCategoryIntoView();\n  useActiveCategoryScrollDetection(setActiveCategory);\n  const isSearchMode = useIsSearchMode();\n\n  const categoriesConfig = useCategoriesConfig();\n  const CategoryNavigationRef = useCategoryNavigationRef();\n  const hideCustomCategory = useShouldHideCustomEmojis();\n\n  return (\n    <div className=\"epr-category-nav\" ref={CategoryNavigationRef}>\n      {categoriesConfig.map(categoryConfig => {\n        const category = categoryFromCategoryConfig(categoryConfig);\n\n        if (isCustomCategory(categoryConfig) && hideCustomCategory) {\n          return null;\n        }\n\n        return (\n          <Button\n            tabIndex={isSearchMode ? -1 : 0}\n            className={clsx('epr-cat-btn', `epr-icn-${category}`, {\n              [ClassNames.active]: category === activeCategory\n            })}\n            key={category}\n            onClick={() => {\n              setActiveCategory(category);\n              scrollCategoryIntoView(category);\n            }}\n            aria-label={categoryNameFromCategoryConfig(categoryConfig)}\n          />\n        );\n      })}\n    </div>\n  );\n}\n","import { scrollTo } from '../DomUtils/scrollTo';\nimport { NullableElement } from '../DomUtils/selectors';\nimport {\n  useBodyRef,\n  usePickerMainRef\n} from '../components/context/ElementRefContext';\n\nexport function useScrollCategoryIntoView() {\n  const BodyRef = useBodyRef();\n  const PickerMainRef = usePickerMainRef();\n\n  return function scrollCategoryIntoView(category: string): void {\n    if (!BodyRef.current) {\n      return;\n    }\n    const $category = BodyRef.current?.querySelector(\n      `[data-name=\"${category}\"]`\n    ) as NullableElement;\n\n    if (!$category) {\n      return;\n    }\n\n    const offsetTop = $category.offsetTop || 0;\n\n    scrollTo(PickerMainRef.current, offsetTop);\n  };\n}\n","import { useEffect } from 'react';\n\nimport { categoryNameFromDom } from '../DomUtils/categoryNameFromDom';\nimport { asSelectors, ClassNames } from '../DomUtils/classNames';\nimport { useBodyRef } from '../components/context/ElementRefContext';\n\nexport function useActiveCategoryScrollDetection(\n  setActiveCategory: (category: string) => void\n) {\n  const BodyRef = useBodyRef();\n\n  useEffect(() => {\n    const visibleCategories = new Map();\n    const bodyRef = BodyRef.current;\n    const observer = new IntersectionObserver(\n      entries => {\n        if (!bodyRef) {\n          return;\n        }\n\n        for (const entry of entries) {\n          const id = categoryNameFromDom(entry.target);\n          visibleCategories.set(id, entry.intersectionRatio);\n        }\n\n        const ratios = Array.from(visibleCategories);\n        const lastCategory = ratios[ratios.length - 1];\n\n        if (lastCategory[1] == 1) {\n          return setActiveCategory(lastCategory[0]);\n        }\n\n        for (const [id, ratio] of ratios) {\n          if (ratio) {\n            setActiveCategory(id);\n            break;\n          }\n        }\n      },\n      {\n        threshold: [0, 1]\n      }\n    );\n    bodyRef?.querySelectorAll(asSelectors(ClassNames.category)).forEach(el => {\n      observer.observe(el);\n    });\n  }, [BodyRef, setActiveCategory]);\n}\n","export function categoryNameFromDom($category: Element | null): string | null {\n  return $category?.getAttribute('data-name') ?? null;\n}\n","import { useCustomEmojisConfig } from '../config/useConfig';\n\nexport function useShouldHideCustomEmojis() {\n  const customCategoryConfig = useCustomEmojisConfig();\n\n  if (!customCategoryConfig) {\n    return false;\n  }\n\n  return customCategoryConfig.length === 0;\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\nimport { useState } from 'react';\n\nimport { asSelectors, ClassNames } from '../../DomUtils/classNames';\nimport {\n  useAutoFocusSearchConfig,\n  useSearchDisabledConfig,\n  useSearchPlaceHolderConfig\n} from '../../config/useConfig';\nimport { useCloseAllOpenToggles } from '../../hooks/useCloseAllOpenToggles';\nimport {\n  getNormalizedSearchTerm,\n  useClearSearch,\n  useFilter\n} from '../../hooks/useFilter';\nimport { useIsSkinToneInSearch } from '../../hooks/useShouldShowSkinTonePicker';\nimport Flex from '../Layout/Flex';\nimport Relative from '../Layout/Relative';\nimport { Button } from '../atoms/Button';\nimport { useSearchInputRef } from '../context/ElementRefContext';\n\nimport './Search.css';\nimport { SkinTonePicker } from './SkinTonePicker';\n\nexport function SearchContainer() {\n  const searchDisabled = useSearchDisabledConfig();\n\n  const isSkinToneInSearch = useIsSkinToneInSearch();\n\n  if (searchDisabled) {\n    return null;\n  }\n\n  return (\n    <Flex className=\"epr-header-overlay\">\n      <Search />\n\n      {isSkinToneInSearch ? <SkinTonePicker /> : null}\n    </Flex>\n  );\n}\n\nexport function Search() {\n  const [inc, setInc] = useState(0);\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n  const SearchInputRef = useSearchInputRef();\n  const clearSearch = useClearSearch();\n  const placeholder = useSearchPlaceHolderConfig();\n  const autoFocus = useAutoFocusSearchConfig();\n  const { onChange } = useFilter();\n\n  const input = SearchInputRef?.current;\n  const value = input?.value;\n\n  return (\n    <Relative className=\"epr-search-container\">\n      <CssSearch value={value} />\n      <input\n        // eslint-disable-next-line jsx-a11y/no-autofocus\n        autoFocus={autoFocus}\n        aria-label={'Type to search for an emoji'}\n        onFocus={closeAllOpenToggles}\n        className=\"epr-search\"\n        type=\"text\"\n        placeholder={placeholder}\n        onChange={event => {\n          setInc(inc + 1);\n          setTimeout(() => {\n            onChange(event?.target?.value ?? value);\n          });\n        }}\n        ref={SearchInputRef}\n      />\n      <div className=\"epr-icn-search\" />\n      <Button\n        className={clsx('epr-btn-clear-search', 'epr-visible-on-search-only')}\n        onClick={clearSearch}\n      >\n        <div className=\"epr-icn-clear-search\" />\n      </Button>\n    </Relative>\n  );\n}\n\nconst CSS_SEARCH_SELECTOR = `${asSelectors(\n  ClassNames.emojiPicker\n)} ${asSelectors(ClassNames.emojiList)}`;\n\nfunction CssSearch({ value }: { value: undefined | string }) {\n  if (!value) {\n    return null;\n  }\n\n  const searchQuery = `button[data-full-name*=\"${getNormalizedSearchTerm(\n    value\n  )}\"]`;\n\n  return (\n    <style>{`\n        ${CSS_SEARCH_SELECTOR} ${asSelectors(\n      ClassNames.category\n    )}:not(:has(${searchQuery})) {\n        display: none;\n      }\n\n        ${CSS_SEARCH_SELECTOR} button${asSelectors(\n      ClassNames.emoji\n    )}:not(${searchQuery}) {\n        display: none;\n      }\n  `}</style>\n  );\n}\n","import { useCallback, useEffect, useMemo } from 'react';\n\nimport { hasNextElementSibling } from '../DomUtils/elementPositionInRow';\nimport {\n  focusNextElementSibling,\n  focusPrevElementSibling\n} from '../DomUtils/focusElement';\nimport { getActiveElement } from '../DomUtils/getActiveElement';\nimport {\n  focusAndClickFirstVisibleEmoji,\n  focusFirstVisibleEmoji,\n  focusNextVisibleEmoji,\n  focusPrevVisibleEmoji,\n  focusVisibleEmojiOneRowDown,\n  focusVisibleEmojiOneRowUp\n} from '../DomUtils/keyboardNavigation';\nimport { useScrollTo } from '../DomUtils/scrollTo';\nimport { buttonFromTarget } from '../DomUtils/selectors';\nimport {\n  useBodyRef,\n  useCategoryNavigationRef,\n  usePickerMainRef,\n  useSearchInputRef,\n  useSkinTonePickerRef\n} from '../components/context/ElementRefContext';\nimport { useSkinToneFanOpenState } from '../components/context/PickerContext';\n\nimport {\n  useCloseAllOpenToggles,\n  useHasOpenToggles\n} from './useCloseAllOpenToggles';\nimport { useDisallowMouseMove } from './useDisallowMouseMove';\nimport { useAppendSearch, useClearSearch } from './useFilter';\nimport {\n  useFocusCategoryNavigation,\n  useFocusSearchInput,\n  useFocusSkinTonePicker\n} from './useFocus';\nimport useIsSearchMode from './useIsSearchMode';\nimport useSetVariationPicker from './useSetVariationPicker';\nimport {\n  useIsSkinToneInPreview,\n  useIsSkinToneInSearch\n} from './useShouldShowSkinTonePicker';\nimport { useSearchDisabledConfig } from '../config/useConfig';\n\nenum KeyboardEvents {\n  ArrowDown = 'ArrowDown',\n  ArrowUp = 'ArrowUp',\n  ArrowLeft = 'ArrowLeft',\n  ArrowRight = 'ArrowRight',\n  Escape = 'Escape',\n  Enter = 'Enter',\n  Space = ' '\n}\n\nexport function useKeyboardNavigation() {\n  usePickerMainKeyboardEvents();\n  useSearchInputKeyboardEvents();\n  useSkinTonePickerKeyboardEvents();\n  useCategoryNavigationKeyboardEvents();\n  useBodyKeyboardEvents();\n}\n\nfunction usePickerMainKeyboardEvents() {\n  const PickerMainRef = usePickerMainRef();\n  const clearSearch = useClearSearch();\n  const scrollTo = useScrollTo();\n  const SearchInputRef = useSearchInputRef();\n  const focusSearchInput = useFocusSearchInput();\n  const hasOpenToggles = useHasOpenToggles();\n  const disallowMouseMove = useDisallowMouseMove();\n\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        disallowMouseMove();\n        switch (key) {\n          // eslint-disable-next-line no-fallthrough\n          case KeyboardEvents.Escape:\n            event.preventDefault();\n            if (hasOpenToggles()) {\n              closeAllOpenToggles();\n              return;\n            }\n            clearSearch();\n            scrollTo(0);\n            focusSearchInput();\n            break;\n        }\n      },\n    [\n      scrollTo,\n      clearSearch,\n      closeAllOpenToggles,\n      focusSearchInput,\n      hasOpenToggles,\n      disallowMouseMove\n    ]\n  );\n\n  useEffect(() => {\n    const current = PickerMainRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [PickerMainRef, SearchInputRef, scrollTo, onKeyDown]);\n}\n\nfunction useSearchInputKeyboardEvents() {\n  const focusSkinTonePicker = useFocusSkinTonePicker();\n  const PickerMainRef = usePickerMainRef();\n  const BodyRef = useBodyRef();\n  const SearchInputRef = useSearchInputRef();\n  const [, setSkinToneFanOpenState] = useSkinToneFanOpenState();\n  const goDownFromSearchInput = useGoDownFromSearchInput();\n  const isSkinToneInSearch = useIsSkinToneInSearch();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        switch (key) {\n          case KeyboardEvents.ArrowRight:\n            if (!isSkinToneInSearch) {\n              return;\n            }\n            event.preventDefault();\n            setSkinToneFanOpenState(true);\n            focusSkinTonePicker();\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            goDownFromSearchInput();\n            break;\n          case KeyboardEvents.Enter:\n            event.preventDefault();\n            focusAndClickFirstVisibleEmoji(BodyRef.current);\n            break;\n        }\n      },\n    [\n      focusSkinTonePicker,\n      goDownFromSearchInput,\n      setSkinToneFanOpenState,\n      BodyRef,\n      isSkinToneInSearch\n    ]\n  );\n\n  useEffect(() => {\n    const current = SearchInputRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [PickerMainRef, SearchInputRef, onKeyDown]);\n}\n\nfunction useSkinTonePickerKeyboardEvents() {\n  const SkinTonePickerRef = useSkinTonePickerRef();\n  const focusSearchInput = useFocusSearchInput();\n  const SearchInputRef = useSearchInputRef();\n  const goDownFromSearchInput = useGoDownFromSearchInput();\n  const [isOpen, setIsOpen] = useSkinToneFanOpenState();\n  const isSkinToneInPreview = useIsSkinToneInPreview();\n  const isSkinToneInSearch = useIsSkinToneInSearch();\n  const onType = useOnType();\n\n  const onKeyDown = useMemo(\n    () =>\n      // eslint-disable-next-line complexity\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        if (isSkinToneInSearch) {\n          switch (key) {\n            case KeyboardEvents.ArrowLeft:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusNextSkinTone(focusSearchInput);\n              break;\n            case KeyboardEvents.ArrowRight:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusPrevSkinTone();\n              break;\n            case KeyboardEvents.ArrowDown:\n              event.preventDefault();\n              if (isOpen) {\n                setIsOpen(false);\n              }\n              goDownFromSearchInput();\n              break;\n            default:\n              onType(event);\n              break;\n          }\n        }\n\n        if (isSkinToneInPreview) {\n          switch (key) {\n            case KeyboardEvents.ArrowUp:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusNextSkinTone(focusSearchInput);\n              break;\n            case KeyboardEvents.ArrowDown:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusPrevSkinTone();\n              break;\n            default:\n              onType(event);\n              break;\n          }\n        }\n      },\n    [\n      isOpen,\n      focusSearchInput,\n      setIsOpen,\n      goDownFromSearchInput,\n      onType,\n      isSkinToneInPreview,\n      isSkinToneInSearch\n    ]\n  );\n\n  useEffect(() => {\n    const current = SkinTonePickerRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [SkinTonePickerRef, SearchInputRef, isOpen, onKeyDown]);\n}\n\nfunction useCategoryNavigationKeyboardEvents() {\n  const focusSearchInput = useFocusSearchInput();\n  const CategoryNavigationRef = useCategoryNavigationRef();\n  const BodyRef = useBodyRef();\n  const onType = useOnType();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        switch (key) {\n          case KeyboardEvents.ArrowUp:\n            event.preventDefault();\n            focusSearchInput();\n            break;\n          case KeyboardEvents.ArrowRight:\n            event.preventDefault();\n            focusNextElementSibling(getActiveElement());\n            break;\n          case KeyboardEvents.ArrowLeft:\n            event.preventDefault();\n            focusPrevElementSibling(getActiveElement());\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            focusFirstVisibleEmoji(BodyRef.current);\n            break;\n          default:\n            onType(event);\n            break;\n        }\n      },\n    [BodyRef, focusSearchInput, onType]\n  );\n\n  useEffect(() => {\n    const current = CategoryNavigationRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [CategoryNavigationRef, BodyRef, onKeyDown]);\n}\n\nfunction useBodyKeyboardEvents() {\n  const BodyRef = useBodyRef();\n  const goUpFromBody = useGoUpFromBody();\n  const setVariationPicker = useSetVariationPicker();\n  const hasOpenToggles = useHasOpenToggles();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  const onType = useOnType();\n\n  const onKeyDown = useMemo(\n    () =>\n      // eslint-disable-next-line complexity\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        const activeElement = buttonFromTarget(getActiveElement());\n\n        switch (key) {\n          case KeyboardEvents.ArrowRight:\n            event.preventDefault();\n            focusNextVisibleEmoji(activeElement);\n            break;\n          case KeyboardEvents.ArrowLeft:\n            event.preventDefault();\n            focusPrevVisibleEmoji(activeElement);\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            if (hasOpenToggles()) {\n              closeAllOpenToggles();\n              break;\n            }\n            focusVisibleEmojiOneRowDown(activeElement);\n            break;\n          case KeyboardEvents.ArrowUp:\n            event.preventDefault();\n            if (hasOpenToggles()) {\n              closeAllOpenToggles();\n              break;\n            }\n            focusVisibleEmojiOneRowUp(activeElement, goUpFromBody);\n            break;\n          case KeyboardEvents.Space:\n            event.preventDefault();\n            setVariationPicker(event.target as HTMLElement);\n            break;\n          default:\n            onType(event);\n            break;\n        }\n      },\n    [\n      goUpFromBody,\n      onType,\n      setVariationPicker,\n      hasOpenToggles,\n      closeAllOpenToggles\n    ]\n  );\n\n  useEffect(() => {\n    const current = BodyRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [BodyRef, onKeyDown]);\n}\n\nfunction useGoDownFromSearchInput() {\n  const focusCategoryNavigation = useFocusCategoryNavigation();\n  const isSearchMode = useIsSearchMode();\n  const BodyRef = useBodyRef();\n\n  return useCallback(\n    function goDownFromSearchInput() {\n      if (isSearchMode) {\n        return focusFirstVisibleEmoji(BodyRef.current);\n      }\n      return focusCategoryNavigation();\n    },\n    [BodyRef, focusCategoryNavigation, isSearchMode]\n  );\n}\n\nfunction useGoUpFromBody() {\n  const focusSearchInput = useFocusSearchInput();\n  const focusCategoryNavigation = useFocusCategoryNavigation();\n  const isSearchMode = useIsSearchMode();\n\n  return useCallback(\n    function goUpFromEmoji() {\n      if (isSearchMode) {\n        return focusSearchInput();\n      }\n      return focusCategoryNavigation();\n    },\n    [focusSearchInput, isSearchMode, focusCategoryNavigation]\n  );\n}\n\nfunction focusNextSkinTone(exitLeft: () => void) {\n  const currentSkinTone = getActiveElement();\n\n  if (!currentSkinTone) {\n    return;\n  }\n\n  if (!hasNextElementSibling(currentSkinTone)) {\n    exitLeft();\n  }\n\n  focusNextElementSibling(currentSkinTone);\n}\n\nfunction focusPrevSkinTone() {\n  const currentSkinTone = getActiveElement();\n\n  if (!currentSkinTone) {\n    return;\n  }\n\n  focusPrevElementSibling(currentSkinTone);\n}\n\nfunction useOnType() {\n  const appendSearch = useAppendSearch();\n  const focusSearchInput = useFocusSearchInput();\n  const searchDisabled = useSearchDisabledConfig();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  return function onType(event: KeyboardEvent) {\n    const { key } = event;\n\n    if (hasModifier(event) || searchDisabled) {\n      return;\n    }\n\n    if (key.match(/(^[a-zA-Z0-9]$){1}/)) {\n      event.preventDefault();\n      closeAllOpenToggles();\n      focusSearchInput();\n      appendSearch(key);\n    }\n  };\n}\n\nfunction hasModifier(event: KeyboardEvent): boolean {\n  const { metaKey, ctrlKey, altKey } = event;\n\n  return metaKey || ctrlKey || altKey;\n}\n","import * as React from 'react';\n\nimport Relative from '../Layout/Relative';\nimport { CategoryNavigation } from '../navigation/CategoryNavigation';\n\nimport './Header.css';\nimport { SearchContainer } from './Search';\n\nexport function Header() {\n  return (\n    <Relative className=\"epr-header\">\n      <SearchContainer />\n      <CategoryNavigation />\n    </Relative>\n  );\n}\n","import { NullableElement } from './selectors';\n\nexport function getActiveElement() {\n  return document.activeElement as NullableElement;\n}\n","import { GetEmojiUrl } from '../components/emoji/BaseEmojiProps';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport { emojiUnified, emojiVariations } from '../dataUtils/emojiSelectors';\nimport { EmojiStyle } from '../types/exposedTypes';\n\nexport function preloadEmoji(\n  getEmojiUrl: GetEmojiUrl,\n  emoji: undefined | DataEmoji,\n  emojiStyle: EmojiStyle\n): void {\n  if (!emoji) {\n    return;\n  }\n\n  if (emojiStyle === EmojiStyle.NATIVE) {\n    return;\n  }\n\n  const unified = emojiUnified(emoji);\n\n  if (preloadedEmojs.has(unified)) {\n    return;\n  }\n\n  emojiVariations(emoji).forEach((variation) => {\n    const emojiUrl = getEmojiUrl(variation, emojiStyle);\n    preloadImage(emojiUrl);\n  });\n\n  preloadedEmojs.add(unified);\n}\n\nexport const preloadedEmojs: Set<string> = new Set();\n\nfunction preloadImage(url: string): void {\n  const image = new Image();\n  image.src = url;\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { usePickerSizeConfig, useThemeConfig } from '../../config/useConfig';\nimport useIsSearchMode from '../../hooks/useIsSearchMode';\nimport { useKeyboardNavigation } from '../../hooks/useKeyboardNavigation';\nimport { useOnFocus } from '../../hooks/useOnFocus';\nimport { Theme } from '../../types/exposedTypes';\nimport { usePickerMainRef } from '../context/ElementRefContext';\nimport { PickerContextProvider } from '../context/PickerContext';\nimport './PickerMain.css';\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n}>;\n\nexport default function PickerMain({ children }: Props) {\n  return (\n    <PickerContextProvider>\n      <PickerRootElement>{children}</PickerRootElement>\n    </PickerContextProvider>\n  );\n}\n\ntype RootProps = Readonly<{\n  children: React.ReactNode;\n}>;\n\nfunction PickerRootElement({ children }: RootProps) {\n  const theme = useThemeConfig();\n  const searchModeActive = useIsSearchMode();\n  const PickerMainRef = usePickerMainRef();\n  const { height, width } = usePickerSizeConfig();\n\n  useKeyboardNavigation();\n  useOnFocus();\n\n  const style = {\n    height,\n    width\n  };\n\n  return (\n    <aside\n      className={clsx(ClassNames.emojiPicker, 'epr-main', {\n        [ClassNames.searchActive]: searchModeActive,\n        'epr-dark-theme': theme === Theme.DARK\n      })}\n      ref={PickerMainRef}\n      style={style}\n    >\n      {children}\n    </aside>\n  );\n}\n","import { useEffect } from 'react';\n\nimport { buttonFromTarget, emojiFromElement } from '../DomUtils/selectors';\nimport { useBodyRef } from '../components/context/ElementRefContext';\nimport { useEmojiStyleConfig, useGetEmojiUrlConfig } from '../config/useConfig';\nimport { emojiHasVariations } from '../dataUtils/emojiSelectors';\nimport { EmojiStyle } from '../types/exposedTypes';\n\nimport { preloadEmoji } from './preloadEmoji';\n\nexport function useOnFocus() {\n  const BodyRef = useBodyRef();\n  const emojiStyle = useEmojiStyleConfig();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  useEffect(() => {\n    if (emojiStyle === EmojiStyle.NATIVE) {\n      return;\n    }\n\n    const bodyRef = BodyRef.current;\n\n    bodyRef?.addEventListener('focusin', onFocus);\n\n    return () => {\n      bodyRef?.removeEventListener('focusin', onFocus);\n    };\n\n    function onFocus(event: FocusEvent) {\n      const button = buttonFromTarget(event.target as HTMLElement);\n\n      if (!button) {\n        return;\n      }\n\n      const [emoji] = emojiFromElement(button);\n\n      if (!emoji) {\n        return;\n      }\n\n      if (emojiHasVariations(emoji)) {\n        preloadEmoji(getEmojiUrl, emoji, emojiStyle);\n      }\n    }\n  }, [BodyRef, emojiStyle, getEmojiUrl]);\n}\n","export function isSystemDarkTheme(): boolean {\n  if (typeof window === 'undefined') {\n    return false;\n  }\n\n  return !!window.matchMedia('(prefers-color-scheme: dark)').matches;\n}\n","import * as React from 'react';\n\nimport { Body } from './components/body/Body';\nimport { ElementRefContextProvider } from './components/context/ElementRefContext';\nimport { PickerConfigProvider } from './components/context/PickerConfigContext';\nimport { Preview } from './components/footer/Preview';\nimport { Header } from './components/header/Header';\nimport PickerMain from './components/main/PickerMain';\n\nimport './EmojiPickerReact.css';\nimport { PickerProps } from './index';\n\nfunction EmojiPicker(props: PickerProps) {\n  return (\n    <ElementRefContextProvider>\n      <PickerConfigProvider {...props}>\n        <PickerMain>\n          <Header />\n          <Body />\n          <Preview />\n        </PickerMain>\n      </PickerConfigProvider>\n    </ElementRefContextProvider>\n  );\n}\n\n// eslint-disable-next-line complexity\nexport default React.memo(EmojiPicker, (prev, next) => {\n  return (\n    prev.emojiVersion === next.emojiVersion &&\n    prev.searchPlaceHolder === next.searchPlaceHolder &&\n    prev.searchPlaceholder === next.searchPlaceholder &&\n    prev.defaultSkinTone === next.defaultSkinTone &&\n    prev.skinTonesDisabled === next.skinTonesDisabled &&\n    prev.autoFocusSearch === next.autoFocusSearch &&\n    prev.emojiStyle === next.emojiStyle &&\n    prev.theme === next.theme &&\n    prev.suggestedEmojisMode === next.suggestedEmojisMode &&\n    prev.lazyLoadEmojis === next.lazyLoadEmojis &&\n    prev.height === next.height &&\n    prev.width === next.width &&\n    prev.searchDisabled === next.searchDisabled &&\n    prev.skinTonePickerLocation === next.skinTonePickerLocation\n  );\n});\n","import * as React from 'react';\n\nexport default class ErrorBoundary extends React.Component<\n  { children: React.ReactNode },\n  { hasError: boolean }\n> {\n  constructor(props: { children: React.ReactNode }) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: any) {\n    // eslint-disable-next-line no-console\n    console.error('Emoji Picker React failed to render:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return null;\n    }\n\n    return this.props.children;\n  }\n}\n","import * as React from 'react';\n\nimport { EmojiStyle } from '../../types/exposedTypes';\n\nimport { GetEmojiUrl } from './BaseEmojiProps';\nimport { ViewOnlyEmoji } from './ViewOnlyEmoji';\n\nexport function ExportedEmoji({\n  unified,\n  size = 32,\n  emojiStyle = EmojiStyle.APPLE,\n  lazyLoad = false,\n  getEmojiUrl,\n  emojiUrl\n}: {\n  unified: string;\n  emojiStyle?: EmojiStyle;\n  size?: number;\n  lazyLoad?: boolean;\n  getEmojiUrl?: GetEmojiUrl;\n  emojiUrl?: string;\n}) {\n  if (!unified && !emojiUrl && !getEmojiUrl) {\n    return null;\n  }\n\n  return (\n    <ViewOnlyEmoji\n      unified={unified}\n      size={size}\n      emojiStyle={emojiStyle}\n      lazyLoad={lazyLoad}\n      getEmojiUrl={emojiUrl ? () => emojiUrl : getEmojiUrl}\n    />\n  );\n}\n","import * as React from 'react';\n\nimport EmojiPickerReact from './EmojiPickerReact';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { PickerConfig } from './config/config';\nimport {\n  MutableConfigContext,\n  useDefineMutableConfig\n} from './config/mutableConfig';\n\nexport { ExportedEmoji as Emoji } from './components/emoji/ExportedEmoji';\n\nexport {\n  EmojiStyle,\n  SkinTones,\n  Theme,\n  Categories,\n  EmojiClickData,\n  SuggestionMode,\n  SkinTonePickerLocation\n} from './types/exposedTypes';\n\nexport interface PickerProps extends PickerConfig {}\n\nexport default function EmojiPicker(props: PickerProps) {\n  const MutableConfigRef = useDefineMutableConfig({\n    onEmojiClick: props.onEmojiClick\n  });\n\n  return (\n    <ErrorBoundary>\n      <MutableConfigContext.Provider value={MutableConfigRef}>\n        <EmojiPickerReact {...props} />\n      </MutableConfigContext.Provider>\n    </ErrorBoundary>\n  );\n}\n"],"names":["ClassNames","asSelectors","classNames","map","c","join","focusElement","element","requestAnimationFrame","focus","focusPrevElementSibling","previousElementSibling","focusNextElementSibling","nextElementSibling","focusFirstElementChild","firstElementChild","ElementRefContextProvider","children","PickerMainRef","React","AnchoredEmojiRef","BodyRef","SearchInputRef","SkinTonePickerRef","CategoryNavigationRef","VariationPickerRef","ElementRefContext","Provider","value","SuggestionMode","EmojiStyle","Theme","SkinTones","Categories","SkinTonePickerLocation","useElementRef","usePickerMainRef","useAnchoredEmojiRef","useSetAnchoredEmojiRef","target","current","useBodyRef","useSearchInputRef","useSkinTonePickerRef","useCategoryNavigationRef","categoriesOrdered","SUGGESTED","CUSTOM","SMILEYS_PEOPLE","ANIMALS_NATURE","FOOD_DRINK","TRAVEL_PLACES","ACTIVITIES","OBJECTS","SYMBOLS","FLAGS","SuggestedRecent","name","category","configByCategory","baseCategoriesConfig","modifiers","categoryFromCategoryConfig","categoryNameFromCategoryConfig","getBaseConfigByCategory","modifier","Object","assign","EmojiProperties","skinToneVariations","NEUTRAL","LIGHT","MEDIUM_LIGHT","MEDIUM","MEDIUM_DARK","DARK","skinTonesNamed","entries","reduce","acc","skinTonesMapped","mapped","skinTone","alphaNumericEmojiIndex","indexEmoji","emoji","emojiNames","flat","toLowerCase","replace","split","forEach","char","emojiUnified","emojiName","unifiedWithoutSkinTone","unified","splat","splice","emojiHasVariations","emojiVariations","find","variation","includes","emojiVariationUnified","emojisByCategory","emojis","emojiUrlByUnified","emojiStyle","TWITTER","GOOGLE","FACEBOOK","APPLE","cdnUrl","variations","length","emojiByUnified","allEmojisByUnified","withoutSkinTone","setTimeout","allEmojis","searchIndex","values","Emoji","KNOWN_FAILING_EMOJIS","basePickerConfig","autoFocusSearch","categories","customEmojis","defaultSkinTone","emojiVersion","getEmojiUrl","height","lazyLoadEmojis","previewConfig","basePreviewConfig","searchDisabled","searchPlaceHolder","searchPlaceholder","skinTonePickerLocation","SEARCH","skinTonesDisabled","suggestedEmojisMode","FREQUENT","theme","unicodeToHide","Set","width","defaultEmoji","defaultCaption","showPreview","ConfigContext","PickerConfigProvider","config","userConfig","base","userCategoriesConfig","extra","suggestionMode","RECENT","_userCategoriesConfig","mergeCategoriesConfig","emojiData","names","id","added_in","imgUrl","customToRegularEmoji","push","PREVIEW","mergeConfig","usePickerConfig","MutableConfigContext","createContext","emptyFunc","useSkinTonesDisabledConfig","useEmojiStyleConfig","useCategoriesConfig","usePreviewConfig","useSearchDisabledConfig","useSkinTonePickerLocationConfig","useGetEmojiUrlConfig","getDimension","dimensionConfig","useDebouncedState","initialValue","delay","useState","state","setState","timer","useRef","Promise","resolve","clearTimeout","window","_window","useDisallowedEmojis","DisallowedEmojisRef","emojiVersionConfig","useMemo","parseFloat","Number","isNaN","disallowedEmojis","supportedLevel","addedIn","addedInNewerVersion","PickerContextProvider","dispatch","filterRef","disallowClickRef","disallowMouseRef","disallowedEmojisRef","suggestedUpdateState","Date","now","searchTerm","skinToneFanOpenState","activeSkinTone","activeCategoryState","emojisThatFailedToLoadState","emojiVariationPickerState","isPastInitialLoad","useEffect","PickerContext","useFilterRef","useDisallowMouseRef","useSearchTermState","useActiveSkinToneState","useEmojisThatFailedToLoadState","useEmojiVariationPickerState","useSkinToneFanOpenState","useUpdateSuggested","setsuggestedUpdate","useAllowMouseMove","DisallowMouseRef","useIsMouseDisallowed","elementCountInRow","parent","parentWidth","getBoundingClientRect","elementWidth","Math","floor","elementIndexInRow","elementLeft","left","parentLeft","rowNumber","elementHeight","elementTop","top","parentTop","round","getRowElements","elements","row","elementsInRow","lastRow","slice","getElementInRow","indexInRow","rowElements","Direction","FlexDirection","SkinTonePickerDirection","EmojiButtonSelector","VisibleEmojiSelector","visible","hidden","buttonFromTarget","emojiElement","closest","emojiFromElement","originalUnified","originalUnifiedFromEmojiElement","unifiedFromEmojiElement","clientHeight","emojiTrueOffsetTop","button","closestCategory","labelHeight","categoryLabelHeight","elementOffsetTop","categoryWithoutLabel","querySelector","categoryContent","queryScrollBody","root","matches","scrollBody","emojiDistanceFromScrollTop","closestScrollBody","_closestScrollBody","scrollTop","offsetTop","elementOffsetLeft","offsetLeft","dataset","elementDataSet","isVisibleEmoji","classList","contains","isHidden","allVisibleEmojis","Array","from","querySelectorAll","lastVisibleEmoji","last","prevVisibleEmoji","prev","prevCategory","firstVisibleEmoji","parentBottom","bottom","elementBottom","firstVisibleElementInContainer","nextCategory","next","closestCategoryContent","parseNativeEmoji","hex","String","fromCodePoint","parseInt","getSuggested","mode","localStorage","recent","JSON","parse","_window2","getItem","sort","a","b","count","isCustomEmoji","undefined","useCloseAllOpenToggles","variationPicker","setVariationPicker","skinToneFanOpen","setSkinToneFanOpen","useCallback","useHasOpenToggles","useSetVariationPicker","setAnchoredEmojiRef","setEmojiVariationPicker","emojiFromEvent","event","Boolean","parentElement","_element$parentElemen","scrollTo","$eprBody","scrollEmojiAboveLabel","isEmojiBehindLabel","by","scrollBy","useFocusSearchInput","useFocusCategoryNavigation","useClearSearch","applySearch","useApplySearch","focusSearchInput","setSearchTerm","then","hasMatch","keyword","some","getNormalizedSearchTerm","str","trim","styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","Button","props","className","clsx","ClickableEmojiButton","hiddenOnSearch","showVariations","hasVariations","EmojiImg","lazyLoad","onError","src","alt","external","loading","NativeEmoji","ViewOnlyEmoji","size","setEmojisThatFailedToLoad","fontSize","emojiToRender","NATIVE","add","ClickableEmoji","EmojiCategory","categoryConfig","categoryName","label","Suggested","suggestedUpdated","suggestedEmojisModeConfig","suggested","suggestedItem","original","key","EmojiList","emojiList","index","RenderCategory","isUnicodeHidden","filter","emojisThatFailedToLoad","isEmojiFiltered","isEmojiHidden","_filter$searchTerm","isEmojiFilteredBySearchTerm","failedToLoad","has","filteredOut","isEmojiDisallowed","emojisToPush","hiddenCounter","isDisallowed","focusFirstVisibleEmoji","EmojiVariationPicker","pointerStyle","direction","Up","getMenuDirection","getTop","emojiOffsetTop","bodyRef","buttonHeight","Down","useVariationPickerTop","getPointerStyle","emojiTruOffsetLeft","clientWidth","usePointerStyle","pointing-up","concat","Body","closeAllOpenToggles","addEventListener","onScroll","passive","removeEventListener","useOnScroll","mouseDownTimerRef","onEmojiClick","useContext","updateSuggested","activeEmojiStyle","onClick","skinToneToUse","suspectedSkinTone","activeVariationFromUnified","nextList","existing","i","min","setItem","stringify","setSuggested","getImageUrl","imageUrl","isCustom","emojiClickOutput","onMouseDown","onMouseUp","useMouseDownHandlers","allowMouseMove","isMouseDisallowed","onMouseMove","useOnMouseMove","useIsSkinToneInSearch","useIsSkinToneInPreview","Flex","ROW","Space","flex","Absolute","position","Relative","SkinTonePickerMenu","right","SkinTonePicker","VERTICAL","HORIZONTAL","isDisabled","isOpen","setIsOpen","setActiveSkinTone","expandedSize","ITEM_SIZE","vertical","open","flexBasis","skinToneVariation","active","transform","tabIndex","Preview","isSkinToneInPreview","PreviewBody","previewEmoji","setPreviewEmoji","variationPickerEmoji","allow","onEscape","onMouseOver","onEnter","onLeave","e","relatedTarget","useEmojiPreviewEvents","show","defaultText","useIsSearchMode","CategoryNavigation","activeCategory","setActiveCategory","scrollCategoryIntoView","$category","_BodyRef$current","visibleCategories","Map","observer","IntersectionObserver","entry","getAttribute","set","intersectionRatio","ratios","lastCategory","threshold","el","observe","useActiveCategoryScrollDetection","customCategoryConfig","isSearchMode","categoriesConfig","hideCustomCategory","isCustomCategory","SearchContainer","isSkinToneInSearch","Search","inc","setInc","clearSearch","placeholder","p","autoFocus","onChange","setFilterRef","setFilter","setter","useSetFilterRef","inputValue","nextValue","longestMatch","dict","longestMatchingKey","keys","findLongestMatch","filtered","filterEmojiObjectByKeyword","useFilter","input","CssSearch","onFocus","_event$target","KeyboardEvents","CSS_SEARCH_SELECTOR","emojiPicker","searchQuery","Header","getActiveElement","activeElement","useGoDownFromSearchInput","focusCategoryNavigation","focusNextSkinTone","exitLeft","currentSkinTone","focusPrevSkinTone","useOnType","appendSearch","metaKey","ctrlKey","altKey","hasModifier","match","preventDefault","preloadedEmojs","PickerMain","PickerRootElement","AUTO","matchMedia","useThemeConfig","searchModeActive","usePickerSizeConfig","focusSkinTonePicker","setSkinToneFanOpenState","goDownFromSearchInput","onKeyDown","hasOpenToggles","disallowMouseMove","Escape","usePickerMainKeyboardEvents","firstEmoji","ArrowRight","ArrowDown","Enter","click","onType","ArrowLeft","ArrowUp","useSkinTonePickerKeyboardEvents","useCategoryNavigationKeyboardEvents","goUpFromBody","nextVisibleEmoji","focusNextVisibleEmoji","focusPrevVisibleEmoji","nextRowElements","allElements","currentRow","nextRow","countInRow","parentHeight","hasNextRow","nextVisibleCategory","visibleEmojiOneRowDown","exitUp","prevRowElements","prevVisibleCategory","visibleEmojiOneRowUp","focusVisibleEmojiOneRowUp","useBodyKeyboardEvents","useKeyboardNavigation","url","Image","preloadEmoji","searchActive","EmojiPicker","ErrorBoundary","_this","hasError","getDerivedStateFromError","componentDidCatch","error","errorInfo","console","render","this","emojiUrl","MutableConfigRef","useDefineMutableConfig","EmojiPickerReact"],"mappings":"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"}