{"version":3,"file":"text.js","sourceRoot":"","sources":["../../../../src/components/text/text.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,sBAAsB,CAAA;AAC3C,OAAO,EAAgB,GAAG,EAAE,MAAM,0BAA0B,CAAA;AAC5D,OAAO,KAAK,KAAK,MAAM,OAAO,CAAA;AAE9B,OAAO,EAAE,GAAG,EAAE,MAAM,aAAa,CAAA;AAEjC,MAAM,YAAY,GAAG,GAAG,CAAC,EAAE,EAAE;IAC3B,QAAQ,EAAE;QACR,IAAI,EAAE;YACJ,MAAM,EAAE,EAAE;YACV,KAAK,EAAE,EAAE;YACT,IAAI,EAAE,EAAE;YACR,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,EAAE;SACX;QACD,MAAM,EAAE;YACN,OAAO,EAAE,aAAa;YACtB,IAAI,EAAE,aAAa;SACpB;QACD,MAAM,EAAE;YACN,IAAI,EAAE,WAAW;YACjB,IAAI,EAAE,WAAW;SAClB;QACD,OAAO,EAAE;YACP,MAAM,EAAE,EAAE;YACV,OAAO,EAAE,EAAE;SACZ;KACF;IACD,eAAe,EAAE;QACf,MAAM,EAAE,MAAM;QACd,IAAI,EAAE,MAAM;QACZ,MAAM,EAAE,SAAS;QACjB,OAAO,EAAE,QAAQ;KAClB;IACD,gBAAgB,EAAE;QAChB;YACE,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,QAAQ;YACjB,SAAS,EAAE,YAAY;SACxB;QACD;YACE,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,SAAS;YAClB,SAAS,EAAE,oBAAoB;SAChC;QACD;YACE,IAAI,EAAE,OAAO;YACb,OAAO,EAAE,QAAQ;YACjB,SAAS,EAAE,WAAW;SACvB;QACD;YACE,IAAI,EAAE,OAAO;YACb,OAAO,EAAE,SAAS;YAClB,SAAS,EAAE,mBAAmB;SAC/B;QACD;YACE,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,QAAQ;YACjB,SAAS,EAAE,YAAY;SACxB;QACD;YACE,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,SAAS;YAClB,SAAS,EAAE,oBAAoB;SAChC;QACD;YACE,IAAI,EAAE,OAAO;YACb,OAAO,EAAE,QAAQ;YACjB,SAAS,EAAE,WAAW;SACvB;QACD;YACE,IAAI,EAAE,OAAO;YACb,OAAO,EAAE,SAAS;YAClB,SAAS,EAAE,mBAAmB;SAC/B;QACD;YACE,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,QAAQ;YACjB,SAAS,EAAE,YAAY;SACxB;QACD;YACE,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,SAAS;YAClB,SAAS,EAAE,oBAAoB;SAChC;KACF;CACF,CAAC,CAAA;AASF,MAAM,IAAI,GAAG,KAAK,CAAC,UAAU,CAC3B,CACE,EACE,SAAS,EACT,OAAO,GAAG,KAAK,EACf,EAAE,GAAG,GAAG,EACR,IAAI,GAAG,MAAM,EACb,MAAM,GAAG,SAAS,EAClB,MAAM,GAAG,MAAM,EACf,OAAO,GAAG,QAAQ,EAClB,QAAQ,EACR,GAAG,KAAK,EACT,EACD,GAAG,EACH,EAAE;IACF,MAAM,SAAS,GAAG,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAA;IAErC,OAAO,CACL,oBAAC,SAAS,IACR,GAAG,EAAE,GAAG,EACR,SAAS,EAAE,GAAG,CACZ,YAAY,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,EAC/C,SAAS,CACV,KACG,KAAK,IAER,QAAQ,CACC,CACb,CAAA;AACH,CAAC,CACF,CAAA;AACD,IAAI,CAAC,WAAW,GAAG,MAAM,CAAA;AAEzB,OAAO,EAAE,IAAI,EAAE,CAAA","sourcesContent":["import { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport * as React from \"react\"\n\nimport { clx } from \"@/utils/clx\"\n\nconst textVariants = cva(\"\", {\n  variants: {\n    size: {\n      xsmall: \"\",\n      small: \"\",\n      base: \"\",\n      large: \"\",\n      xlarge: \"\",\n    },\n    weight: {\n      regular: \"font-normal\",\n      plus: \"font-medium\",\n    },\n    family: {\n      sans: \"font-sans\",\n      mono: \"font-mono\",\n    },\n    leading: {\n      normal: \"\",\n      compact: \"\",\n    },\n  },\n  defaultVariants: {\n    family: \"sans\",\n    size: \"base\",\n    weight: \"regular\",\n    leading: \"normal\",\n  },\n  compoundVariants: [\n    {\n      size: \"xsmall\",\n      leading: \"normal\",\n      className: \"txt-xsmall\",\n    },\n    {\n      size: \"xsmall\",\n      leading: \"compact\",\n      className: \"txt-compact-xsmall\",\n    },\n    {\n      size: \"small\",\n      leading: \"normal\",\n      className: \"txt-small\",\n    },\n    {\n      size: \"small\",\n      leading: \"compact\",\n      className: \"txt-compact-small\",\n    },\n    {\n      size: \"base\",\n      leading: \"normal\",\n      className: \"txt-medium\",\n    },\n    {\n      size: \"base\",\n      leading: \"compact\",\n      className: \"txt-compact-medium\",\n    },\n    {\n      size: \"large\",\n      leading: \"normal\",\n      className: \"txt-large\",\n    },\n    {\n      size: \"large\",\n      leading: \"compact\",\n      className: \"txt-compact-large\",\n    },\n    {\n      size: \"xlarge\",\n      leading: \"normal\",\n      className: \"txt-xlarge\",\n    },\n    {\n      size: \"xlarge\",\n      leading: \"compact\",\n      className: \"txt-compact-xlarge\",\n    },\n  ],\n})\n\ninterface TextProps\n  extends React.ComponentPropsWithoutRef<\"p\">,\n    VariantProps<typeof textVariants> {\n  asChild?: boolean\n  as?: \"p\" | \"span\" | \"div\"\n}\n\nconst Text = React.forwardRef<HTMLParagraphElement, TextProps>(\n  (\n    {\n      className,\n      asChild = false,\n      as = \"p\",\n      size = \"base\",\n      weight = \"regular\",\n      family = \"sans\",\n      leading = \"normal\",\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const Component = asChild ? Slot : as\n\n    return (\n      <Component\n        ref={ref}\n        className={clx(\n          textVariants({ size, weight, family, leading }),\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </Component>\n    )\n  }\n)\nText.displayName = \"Text\"\n\nexport { Text }\n"]}