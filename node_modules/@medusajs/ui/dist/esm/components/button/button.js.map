{"version":3,"file":"button.js","sourceRoot":"","sources":["../../../../src/components/button/button.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,sBAAsB,CAAA;AAC3C,OAAO,EAAE,GAAG,EAAqB,MAAM,0BAA0B,CAAA;AACjE,OAAO,KAAK,KAAK,MAAM,OAAO,CAAA;AAE9B,OAAO,EAAE,GAAG,EAAE,MAAM,aAAa,CAAA;AACjC,OAAO,EAAE,OAAO,EAAE,MAAM,iBAAiB,CAAA;AAEzC,MAAM,cAAc,GAAG,GAAG,CACxB,GAAG,CACD,8GAA8G,EAC9G,8IAA8I,EAC9I,qEAAqE,CACtE,EACD;IACE,QAAQ,EAAE;QACR,OAAO,EAAE;YACP,OAAO,EAAE,GAAG,CACV,qGAAqG,EACrG,8EAA8E,EAC9E,oFAAoF,EACpF,sCAAsC,CACvC;YACD,SAAS,EAAE,GAAG,CACZ,2FAA2F,EAC3F,4EAA4E,EAC5E,kFAAkF,EAClF,oCAAoC,CACrC;YACD,WAAW,EAAE,GAAG,CACd,cAAc,EACd,0CAA0C,EAC1C,sCAAsC,EACtC,yCAAyC,EACzC,wDAAwD,EACxD,gDAAgD,CACjD;YACD,MAAM,EAAE,GAAG,CACT,mHAAmH,EACnH,0EAA0E,EAC1E,gFAAgF,EAChF,mCAAmC,CACpC;SACF;QACD,IAAI,EAAE;YACJ,IAAI,EAAE,8CAA8C;YACpD,KAAK,EAAE,+CAA+C;YACtD,MAAM,EAAE,8CAA8C;SACvD;KACF;IACD,eAAe,EAAE;QACf,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,SAAS;KACnB;CACF,CACF,CAAA;AASD,MAAM,MAAM,GAAG,KAAK,CAAC,UAAU,CAC7B,CACE,EACE,OAAO,GAAG,SAAS,EACnB,IAAI,GAAG,MAAM,EACb,SAAS,EACT,OAAO,GAAG,KAAK,EACf,QAAQ,EACR,SAAS,GAAG,KAAK,EACjB,QAAQ,EACR,GAAG,KAAK,EACT,EACD,GAAG,EACH,EAAE;IACF,MAAM,SAAS,GAAG,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAA;IAE3C;;;;OAIG;IACH,MAAM,WAAW,GAAG,GAAG,EAAE;QACvB,IAAI,SAAS,EAAE;YACb,OAAO,CACL,8BAAM,SAAS,EAAC,qBAAqB;gBACnC,6BACE,SAAS,EAAE,GAAG,CACZ,gFAAgF,CACjF;oBAED,oBAAC,OAAO,IAAC,SAAS,EAAC,cAAc,GAAG,CAChC;gBACL,QAAQ,CACJ,CACR,CAAA;SACF;QAED,OAAO,QAAQ,CAAA;IACjB,CAAC,CAAA;IAED,OAAO,CACL,oBAAC,SAAS,IACR,GAAG,EAAE,GAAG,KACJ,KAAK,EACT,SAAS,EAAE,GAAG,CAAC,cAAc,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,SAAS,CAAC,EAC5D,QAAQ,EAAE,QAAQ,IAAI,SAAS,IAE9B,WAAW,EAAE,CACJ,CACb,CAAA;AACH,CAAC,CACF,CAAA;AACD,MAAM,CAAC,WAAW,GAAG,QAAQ,CAAA;AAE7B,OAAO,EAAE,MAAM,EAAE,cAAc,EAAE,CAAA","sourcesContent":["import { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport * as React from \"react\"\n\nimport { clx } from \"@/utils/clx\"\nimport { Spinner } from \"@medusajs/icons\"\n\nconst buttonVariants = cva(\n  clx(\n    \"transition-fg relative inline-flex w-fit items-center justify-center overflow-hidden rounded-md outline-none\",\n    \"disabled:bg-ui-bg-disabled disabled:border-ui-border-base disabled:text-ui-fg-disabled disabled:shadow-buttons-neutral disabled:after:hidden\",\n    \"after:transition-fg after:absolute after:inset-0 after:content-['']\"\n  ),\n  {\n    variants: {\n      variant: {\n        primary: clx(\n          \"shadow-buttons-inverted text-ui-fg-on-inverted bg-ui-button-inverted after:button-inverted-gradient\",\n          \"hover:bg-ui-button-inverted-hover hover:after:button-inverted-hover-gradient\",\n          \"active:bg-ui-button-inverted-pressed active:after:button-inverted-pressed-gradient\",\n          \"focus:!shadow-buttons-inverted-focus\"\n        ),\n        secondary: clx(\n          \"shadow-buttons-neutral text-ui-fg-base bg-ui-button-neutral after:button-neutral-gradient\",\n          \"hover:bg-ui-button-neutral-hover hover:after:button-neutral-hover-gradient\",\n          \"active:bg-ui-button-neutral-pressed active:after:button-neutral-pressed-gradient\",\n          \"focus:shadow-buttons-neutral-focus\"\n        ),\n        transparent: clx(\n          \"after:hidden\",\n          \"text-ui-fg-base bg-ui-button-transparent\",\n          \"hover:bg-ui-button-transparent-hover\",\n          \"active:bg-ui-button-transparent-pressed\",\n          \"focus:shadow-buttons-neutral-focus focus:bg-ui-bg-base\",\n          \"disabled:!bg-transparent disabled:!shadow-none\"\n        ),\n        danger: clx(\n          \"shadow-buttons-colored shadow-buttons-danger text-ui-fg-on-color bg-ui-button-danger after:button-danger-gradient\",\n          \"hover:bg-ui-button-danger-hover hover:after:button-danger-hover-gradient\",\n          \"active:bg-ui-button-danger-pressed active:after:button-danger-pressed-gradient\",\n          \"focus:shadow-buttons-danger-focus\"\n        ),\n      },\n      size: {\n        base: \"txt-compact-small-plus gap-x-1.5 px-3 py-1.5\",\n        large: \"txt-compact-medium-plus gap-x-1.5 px-4 py-2.5\",\n        xlarge: \"txt-compact-large-plus gap-x-1.5 px-5 py-3.5\",\n      },\n    },\n    defaultVariants: {\n      size: \"base\",\n      variant: \"primary\",\n    },\n  }\n)\n\ninterface ButtonProps\n  extends React.ComponentPropsWithoutRef<\"button\">,\n    VariantProps<typeof buttonVariants> {\n  isLoading?: boolean\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  (\n    {\n      variant = \"primary\",\n      size = \"base\",\n      className,\n      asChild = false,\n      children,\n      isLoading = false,\n      disabled,\n      ...props\n    },\n    ref\n  ) => {\n    const Component = asChild ? Slot : \"button\"\n\n    /**\n     * In the case of a button where asChild is true, and isLoading is true, we ensure that\n     * only on element is passed as a child to the Slot component. This is because the Slot\n     * component only accepts a single child.\n     */\n    const renderInner = () => {\n      if (isLoading) {\n        return (\n          <span className=\"pointer-events-none\">\n            <div\n              className={clx(\n                \"bg-ui-bg-disabled absolute inset-0 flex items-center justify-center rounded-md\"\n              )}\n            >\n              <Spinner className=\"animate-spin\" />\n            </div>\n            {children}\n          </span>\n        )\n      }\n\n      return children\n    }\n\n    return (\n      <Component\n        ref={ref}\n        {...props}\n        className={clx(buttonVariants({ variant, size }), className)}\n        disabled={disabled || isLoading}\n      >\n        {renderInner()}\n      </Component>\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"]}