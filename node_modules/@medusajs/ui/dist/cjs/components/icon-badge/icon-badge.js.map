{"version":3,"file":"icon-badge.js","sourceRoot":"","sources":["../../../../src/components/icon-badge/icon-badge.tsx"],"names":[],"mappings":";;;;AAAA,qDAA2C;AAC3C,uEAAiE;AACjE,qDAA8B;AAE9B,8CAAuD;AACvD,qCAAiC;AAEjC,MAAM,iBAAiB,GAAG,IAAA,8BAAG,EAC3B,oEAAoE,EACpE;IACE,QAAQ,EAAE;QACR,IAAI,EAAE;YACJ,IAAI,EAAE,SAAS;YACf,KAAK,EAAE,SAAS;SACjB;KACF;CACF,CACF,CAAA;AASD,MAAM,SAAS,GAAG,KAAK,CAAC,UAAU,CAChC,CACE,EACE,QAAQ,EACR,SAAS,EACT,KAAK,GAAG,MAAM,EACd,IAAI,GAAG,MAAM,EACb,OAAO,GAAG,KAAK,EACf,GAAG,KAAK,EACT,EACD,GAAG,EACH,EAAE;IACF,MAAM,SAAS,GAAG,OAAO,CAAC,CAAC,CAAC,iBAAI,CAAC,CAAC,CAAC,MAAM,CAAA;IAEzC,OAAO,CACL,oBAAC,SAAS,IACR,GAAG,EAAE,GAAG,EACR,SAAS,EAAE,IAAA,SAAG,EACZ,IAAA,0BAAkB,EAAC,EAAE,KAAK,EAAE,CAAC,EAC7B,iBAAiB,CAAC,EAAE,IAAI,EAAE,CAAC,EAC3B,SAAS,CACV,KACG,KAAK,IAER,QAAQ,CACC,CACb,CAAA;AACH,CAAC,CACF,CAAA;AAGQ,8BAAS;AAFlB,SAAS,CAAC,WAAW,GAAG,WAAW,CAAA","sourcesContent":["import { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport * as React from \"react\"\n\nimport { badgeColorVariants } from \"@/components/badge\"\nimport { clx } from \"@/utils/clx\"\n\nconst iconBadgeVariants = cva(\n  \"flex items-center justify-center overflow-hidden rounded-md border\",\n  {\n    variants: {\n      size: {\n        base: \"h-6 w-6\",\n        large: \"h-7 w-7\",\n      },\n    },\n  }\n)\n\ninterface IconBadgeProps\n  extends Omit<React.ComponentPropsWithoutRef<\"span\">, \"color\">,\n    VariantProps<typeof badgeColorVariants>,\n    VariantProps<typeof iconBadgeVariants> {\n  asChild?: boolean\n}\n\nconst IconBadge = React.forwardRef<HTMLSpanElement, IconBadgeProps>(\n  (\n    {\n      children,\n      className,\n      color = \"grey\",\n      size = \"base\",\n      asChild = false,\n      ...props\n    },\n    ref\n  ) => {\n    const Component = asChild ? Slot : \"span\"\n\n    return (\n      <Component\n        ref={ref}\n        className={clx(\n          badgeColorVariants({ color }),\n          iconBadgeVariants({ size }),\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </Component>\n    )\n  }\n)\nIconBadge.displayName = \"IconBadge\"\n\nexport { IconBadge }\n"]}