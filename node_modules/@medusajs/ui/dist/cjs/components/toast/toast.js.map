{"version":3,"file":"toast.js","sourceRoot":"","sources":["../../../../src/components/toast/toast.tsx"],"names":[],"mappings":"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","sourcesContent":["\"use client\"\n\nimport {\n  CheckCircleSolid,\n  ExclamationCircleSolid,\n  InformationCircleSolid,\n  Spinner,\n  XCircleSolid,\n} from \"@medusajs/icons\"\nimport * as Primitives from \"@radix-ui/react-toast\"\nimport * as React from \"react\"\n\nimport { clx } from \"@/utils/clx\"\n\nconst ToastProvider = Primitives.Provider\nToastProvider.displayName = \"ToastProvider\"\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof Primitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof Primitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <Primitives.Viewport\n    ref={ref}\n    className={clx(\n      \"fixed right-0 top-0 z-[9999] w-full p-6 md:max-w-[484px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = \"ToastViewport\"\n\ninterface ActionProps {\n  label: string\n  altText: string\n  onClick: () => void | Promise<void>\n}\n\ninterface ToastProps\n  extends React.ComponentPropsWithoutRef<typeof Primitives.Root> {\n  variant?: \"info\" | \"success\" | \"warning\" | \"error\" | \"loading\"\n  title?: string\n  description?: string\n  action?: ActionProps\n  disableDismiss?: boolean\n}\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof Primitives.Root>,\n  ToastProps\n>(\n  (\n    {\n      className,\n      variant,\n      title,\n      description,\n      action,\n      disableDismiss = false,\n      ...props\n    },\n    ref\n  ) => {\n    let Icon = undefined\n\n    switch (variant) {\n      case \"success\":\n        Icon = <CheckCircleSolid className=\"text-ui-tag-green-icon\" />\n        break\n      case \"warning\":\n        Icon = <ExclamationCircleSolid className=\"text-ui-tag-orange-icon\" />\n        break\n      case \"error\":\n        Icon = <XCircleSolid className=\"text-ui-tag-red-icon\" />\n        break\n      case \"loading\":\n        Icon = <Spinner className=\"text-ui-tag-blue-icon animate-spin\" />\n        break\n      default:\n        Icon = <InformationCircleSolid className=\"text-ui-fg-base\" />\n        break\n    }\n\n    if (action && !action.altText) {\n      // eslint-disable-next-line turbo/no-undeclared-env-vars\n      if (process.env.NODE_ENV === \"development\") {\n        console.warn(\n          \"Omitting `altText` from the action is not recommended. Please provide a description for screen readers.\"\n        )\n      }\n    }\n\n    return (\n      <Primitives.Root\n        ref={ref}\n        className={clx(\n          \"bg-ui-bg-base border-ui-border-base flex h-fit min-h-[74px] w-full overflow-hidden rounded-md border shadow-[0_4px_12px_rgba(0,0,0,0.05)] md:max-w-[440px]\",\n          \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none\",\n          className\n        )}\n        {...props}\n      >\n        <div className=\"border-ui-border-base flex flex-1 items-start space-x-3 border-r p-4\">\n          <span aria-hidden>{Icon}</span>\n          <div>\n            {title && (\n              <Primitives.Title className=\"text-ui-fg-base txt-compact-small-plus\">\n                {title}\n              </Primitives.Title>\n            )}\n            {description && (\n              <Primitives.Description className=\"text-ui-fg-subtle txt-compact-medium\">\n                {description}\n              </Primitives.Description>\n            )}\n          </div>\n        </div>\n        <div className=\"flex flex-col\">\n          {action && (\n            <>\n              <Primitives.Action\n                altText={action.altText}\n                className={clx(\n                  \"txt-compact-small-plus text-ui-fg-base bg-ui-bg-base hover:bg-ui-bg-base-hover active:bg-ui-bg-base-pressed flex flex-1 items-center justify-center px-6 transition-colors\",\n                  {\n                    \"text-ui-fg-error\": variant === \"error\",\n                  }\n                )}\n                onClick={(e) => {\n                  e.preventDefault()\n                  action.onClick()\n                }}\n                type=\"button\"\n              >\n                {action.label}\n              </Primitives.Action>\n              <div className=\"bg-ui-border-base h-px w-full\" />\n            </>\n          )}\n          {!disableDismiss && (\n            <Primitives.Close\n              className={clx(\n                \"txt-compact-small-plus text-ui-fg-subtle bg-ui-bg-base hover:bg-ui-bg-base-hover active:bg-ui-bg-base-pressed flex flex-1 items-center justify-center px-6 transition-colors\",\n                {\n                  \"h-1/2\": action,\n                  \"h-full\": !action,\n                }\n              )}\n              aria-label=\"Close\"\n            >\n              Close\n            </Primitives.Close>\n          )}\n        </div>\n      </Primitives.Root>\n    )\n  }\n)\nToast.displayName = \"Toast\"\n\ntype ToastActionElement = ActionProps\n\nexport {\n  Toast,\n  ToastProvider,\n  ToastViewport,\n  type ToastActionElement,\n  type ToastProps,\n}\n"]}