{"version":3,"file":"dialog.js","sourceRoot":"","sources":["../../../../src/hooks/use-prompt/dialog.tsx"],"names":[],"mappings":"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","sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\nimport { Input } from \"@/components/input\"\nimport { Label } from \"@/components/label\"\nimport { Prompt } from \"@/components/prompt\"\n\nexport type DialogProps = {\n  open: boolean\n  title: string\n  description: string\n  verificationText?: string\n  cancelText?: string\n  confirmText?: string\n  onConfirm: () => void\n  onCancel: () => void\n}\n\nconst Dialog = ({\n  open,\n  title,\n  description,\n  verificationText,\n  cancelText = \"Cancel\",\n  confirmText = \"Confirm\",\n  onConfirm,\n  onCancel,\n}: DialogProps) => {\n  const [userInput, setUserInput] = React.useState(\"\")\n\n  const handleUserInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setUserInput(event.target.value)\n  }\n\n  const validInput = React.useMemo(() => {\n    if (!verificationText) {\n      return true\n    }\n\n    return userInput === verificationText\n  }, [userInput, verificationText])\n\n  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n\n    if (!verificationText) {\n      return\n    }\n\n    if (validInput) {\n      onConfirm()\n    }\n  }\n\n  React.useEffect(() => {\n    const handleEscape = (event: KeyboardEvent) => {\n      if (event.key === \"Escape\" && open) {\n        onCancel()\n      }\n    }\n\n    document.addEventListener(\"keydown\", handleEscape)\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleEscape)\n    }\n  }, [onCancel, open])\n\n  return (\n    <Prompt open={open}>\n      <Prompt.Content>\n        <form onSubmit={handleFormSubmit}>\n          <Prompt.Header>\n            <Prompt.Title>{title}</Prompt.Title>\n            <Prompt.Description>{description}</Prompt.Description>\n          </Prompt.Header>\n          {verificationText && (\n            <div className=\"border-ui-border-base mt-6 flex flex-col gap-y-4 border-y p-6\">\n              <Label htmlFor=\"verificationText\" className=\"text-ui-fg-subtle\">\n                Please type{\" \"}\n                <span className=\"text-ui-fg-base txt-compact-medium-plus\">\n                  {verificationText}\n                </span>{\" \"}\n                to confirm.\n              </Label>\n              <Input\n                autoFocus\n                autoComplete=\"off\"\n                id=\"verificationText\"\n                placeholder={verificationText}\n                onChange={handleUserInput}\n              />\n            </div>\n          )}\n          <Prompt.Footer>\n            <Prompt.Cancel onClick={onCancel}>{cancelText}</Prompt.Cancel>\n            <Prompt.Action\n              disabled={!validInput}\n              type={verificationText ? \"submit\" : \"button\"}\n              onClick={verificationText ? undefined : onConfirm}\n            >\n              {confirmText}\n            </Prompt.Action>\n          </Prompt.Footer>\n        </form>\n      </Prompt.Content>\n    </Prompt>\n  )\n}\n\nexport default Dialog\n"]}